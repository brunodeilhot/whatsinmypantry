{"version":3,"sources":["Utils.js","Theme.js","components/ActionButtons.js","components/ThemeButton.js","components/MainNav/MainNavList.js","assets/Logo.svg","pages/about/index.js","components/MainNav/MainNavMobile.js","components/Header.js","assets/SadLogo.svg","components/ErrorPage.js","pages/home/components/Intro.js","pages/home/components/MyPantry/EmptyPantry.js","pages/home/components/MyPantry/IngredientChip.js","pages/home/components/MyPantry/index.js","pages/home/components/SearchIngredients/SearchBar.js","services/apiKey.js","services/index.js","pages/home/components/SearchIngredients/SearchResults.js","pages/home/components/SearchIngredients/index.js","pages/home/index.js","App.js","pages/recipes/components/NoRecipes.js","pages/recipes/components/RecipeList/MissingIng.js","pages/recipes/components/RecipeList/RecipeCard.js","components/Loading.js","components/ScrollTop.js","pages/recipes/components/RecipeList/index.js","pages/recipes/components/Filters/FilterGroups.js","pages/recipes/components/Filters/index.js","pages/recipes/index.js","pages/starred/index.js","pages/recipes/components/RecipeDetails/Header.js","pages/recipes/components/RecipeDetails/Intro/DietIcons.js","pages/recipes/components/RecipeDetails/Intro/Info.js","pages/recipes/components/RecipeDetails/Intro/index.js","pages/recipes/components/RecipeDetails/Ingredients/IngredientList.js","pages/recipes/components/RecipeDetails/Ingredients/Servings.js","pages/recipes/components/RecipeDetails/Ingredients/UnitOptions.js","pages/recipes/components/RecipeDetails/Ingredients/index.js","pages/recipes/components/RecipeDetails/Instructions.js","pages/recipes/components/RecipeDetails/Footer.js","pages/recipes/components/RecipeDetails/index.js","Routes.js","store/index.js","store/reducer.js","index.js"],"names":["useParentSize","ref","useState","parentSize","setWidth","useEffect","getSize","current","width","clientWidth","height","clientHeight","window","addEventListener","baseTheme","createTheme","breakpoints","values","xs","sm","md","lg","xl","typography","button","textTransform","components","MuiButtonBase","defaultProps","disableRipple","disableTouchRipple","MuiIconButton","styleOverrides","root","backgroundColor","MuiSwitch","switchBase","lightTheme","palette","primary","main","secondary","text","background","paper","default","divider","MuiFab","darkTheme","responsiveLightTheme","responsiveFontSizes","responsiveDarkTheme","ActionButtons","actionBtList","name","icon","KitchenRounded","sx","pr","fontSize","link","MenuBookRounded","path","useLocation","pathname","actionButtons","map","indexOf","showActionBt","setShowActionBt","active","setActive","CustomBtNavAction","styled","BottomNavigationAction","borderTop","theme","Box","Toolbar","Paper","position","bottom","left","right","zIndex","elevation","BottomNavigation","showLabels","value","onChange","e","item","component","Link","to","label","toUpperCase","display","flexDirection","minWidth","length","toString","ThemeButton","dispatch","useDispatch","darkMode","useSelector","state","iconOptions","padding","marginTop","borderRadius","boxShadow","Switch","checked","type","payload","aria-label","color","checkedIcon","DarkModeRounded","LightModeRounded","paddingBottom","paddingTop","MainNavList","desktop","desktopLg","filteredNavList","mobile","StarRateRounded","InfoRounded","filter","List","dense","ListItem","disablePadding","ListItemButton","paddingX","ListItemIcon","ListItemText","primaryTypographyProps","align","marginLeft","About","mediaqueries","fontColor","iconColor","Grid","container","justifyContent","m","src","Logo","alt","Typography","variant","paddingY","pb","href","target","underline","mt","IconButton","LinkedIn","GitHub","alignItems","CopyrightRounded","marginX","Date","getFullYear","MainNavMobile","navState","setNavState","toggleNav","onClick","edge","MenuRounded","Drawer","anchor","open","onClose","PaperProps","maxWidth","ml","CloseRounded","role","Header","AppBar","fontWeight","flexGrow","id","ErrorPage","apiLimit","drawerWidth","navigate","useNavigate","timer","setTimeout","clearTimeout","alignContent","p","mb","SadLogo","pt","Intro","EmptyPantry","IngredientChip","ingredient","removeIngredient","CustomChip","Chip","deleteIcon","HighlightOffRounded","onDelete","borderWidth","MyPantry","ingredients","myPantry","ingIndex","ingredientList","Fade","spacing","TransitionGroup","SearchBar","handleChange","searchBarRef","SearchIgredientsInput","TextField","themeColor","borderColor","autoFocus","placeholder","InputProps","startAdornment","InputAdornment","SearchRounded","apiKey","imageBaseURL","api","axios","create","baseURL","headers","Accept","searchIngredients","success","get","params","query","number","catch","error","then","parseJsonResults","searchRecByIng","diet","includeIngredients","sort","sortDirection","undefined","getRecipeDetails","parseJsonData","response","data","results","status","SearchResults","ingredientToggle","resetValue","pantry","searchBar","widthRef","searchBarWidth","ClickAwayListener","onClickAway","border","ListItemAvatar","Avatar","image","maxHeight","textAlign","AddCircleOutlineRounded","CheckCircleRounded","SearchIngredients","useRef","setValue","useDebounce","debouncedValue","ingredientResults","setIngredientResults","searchResults","ingredientIndex","Home","direction","App","apiLimitReached","preferedMode","useMediaQuery","matchRoute","useMatch","bodyRef","body","bodyWidth","PermanentDrawer","flexShrink","boxSizing","borderRight","outlet","ThemeProvider","CssBaseline","minHeight","overflow","NoRecipes","starred","message","filtered","MissingIngWarning","missingIng","toolTip","Tooltip","title","enterDelay","leaveDelay","enterTouchDelay","alignSelf","WarningAmberRounded","RecipeCard","toggleStarred","starredRecipes","iconPosition","starredData","Card","CardActionArea","CardMedia","CardContent","CardActions","MissingIng","findIndex","recipe","Loading","CircularProgress","size","ScrollTop","trigger","useScrollTrigger","disableHysteresis","ScrollTopFab","Fab","Zoom","in","event","ownerDocument","document","querySelector","scrollIntoView","behavior","block","KeyboardArrowUpRounded","RecipeList","recipes","checkIndex","recipeList","missedIngredientCount","columns","FilterGroups","filterBy","handleFilterChange","ToggleBtGroup","ToggleButtonGroup","flexFlow","marginBottom","ToggleBt","ToggleButton","marginRight","bgcolor","top","activeFilter","exclusive","filters","Filters","mealType","noFilters","AccordionIcon","AccordionSummary","filterColors","paddingLeft","transform","Accordion","square","disableGutters","expandIcon","FilterListOffRounded","FilterListRounded","AccordionDetails","Recipes","pantryState","setMealType","setDiet","totalRecipes","setTotalRecipes","recipeLimit","setRecipeLimit","setRecipes","filteredRecipes","dataLength","next","hasMore","option","Starred","handleTransition","borderBottom","backgroundSize","backgroundPosition","mr","DietIcons","icons","prop","glutenFree","dairyFree","vegetarian","vegan","iconStyle","Info","readyInMinutes","healthScore","items","AccessTimeRounded","FavoriteBorderRounded","wrap","pl","IngredientList","extendedIngredients","unit","servings","serving","metric","measures","unitShort","amount","toFixed","us","Servings","handleServing","addServing","removeServing","ServingsInput","addBt","AddRounded","removeBt","RemoveRounded","InputLabelProps","shrink","endAdornment","inputProps","inputMode","UnitOptions","handleUnitChange","MeasureToggleBtGroup","aria","Ingredients","setServing","setUnit","test","Instructions","instructions","analyzedInstructions","listSteps","steps","step","Footer","sourceName","sourceUrl","RecipeDetails","setOpen","handleClose","matchRecipes","useParams","noResults","setNoResults","recipeDetails","setRecipeDetails","details","Dialog","aria-labelledby","TransitionComponent","Slide","TransitionProps","timeout","fullScreen","hideBackdrop","MainRoutes","element","index","persistConfig","key","storage","blacklist","persistedReducer","persistReducer","action","splice","store","createStore","persistor","persistStore","ReactDOM","render","StrictMode","loading","basename","getElementById"],"mappings":"iMAIO,SAASA,EAAcC,GAAM,IAAD,EACFC,qBADE,mBAC1BC,EAD0B,KACdC,EADc,KAkBjC,OAfAC,qBAAU,WACR,IAAMC,EAAU,WACM,OAAhBL,EAAIM,SAGRH,EAAS,CACPI,MAAOP,EAAIM,QAAQE,YACnBC,OAAQT,EAAIM,QAAQI,gBAIxBL,IACAM,OAAOC,iBAAiB,SAAUP,KACjC,CAACL,IAEGE,EAGT,I,gFCvBMW,EAAYC,YAAY,CAC5BC,YAAa,CACXC,OAAQ,CACNC,GAAI,EACJC,GAAI,IACJC,GAAI,IACJC,GAAI,KACJC,GAAI,OAGRC,WAAY,CACVC,OAAQ,CACNC,cAAe,SAGnBC,WAAY,CACVC,cAAe,CACbC,aAAc,CACZC,eAAe,EACfC,oBAAoB,IAGxBC,cAAe,CACbC,eAAgB,CACdC,KAAM,CACJ,UAAW,CACTC,gBAAiB,kBAKzBC,UAAW,CACTH,eAAgB,CACdI,WAAY,CACV,UAAW,CACTF,gBAAiB,eAEnB,sBAAuB,CACrBA,gBAAiB,qBAQvBG,EAAatB,YAAYD,EAAW,CACxCwB,QAAS,CACPC,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,WAERE,KAAM,CACJH,QAAS,UACTE,UAAW,WAEbE,WAAY,CACVC,MAAO,UACPC,QAAS,WAEXC,QAAS,4BAEXpB,WAAY,CACVqB,OAAQ,CACNf,eAAgB,CACdC,KAAM,CACJ,UAAW,CACTC,gBAAiB,iBAQvBc,EAAYjC,YAAYD,EAAW,CACvCwB,QAAS,CACPC,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,WAERE,KAAM,CACJH,QAAS,UACTE,UAAW,WAEbE,WAAY,CACVC,MAAO,UACPC,QAAS,WAEXC,QAAS,sBAEXpB,WAAY,CACVqB,OAAQ,CACNf,eAAgB,CACdC,KAAM,CACJ,UAAW,CACTC,gBAAiB,iBAQhBe,EAAuBC,YAAoBb,GAC3Cc,EAAsBD,YAAoBF,G,mECpBxCI,EA/EO,WACpB,IAAMC,EAAe,CACnB,CACEC,KAAM,SACNC,KAAM,cAACC,EAAA,EAAD,CAAgBC,GAAI,CAAEC,GAAI,EAAGC,SAAU,MAC7CC,KAAM,KAER,CACEN,KAAM,UACNC,KAAM,cAACM,EAAA,EAAD,CAAiBJ,GAAI,CAAEC,GAAI,EAAGC,SAAU,MAC9CC,KAAM,aAMJE,EADWC,cACKC,SAChBC,EAAgBZ,EAAaa,KAAI,SAAC1C,GAAD,OAAYA,EAAOoC,QAAMO,QAAQL,GAjB9C,EAoBc5D,oBAAS,GApBvB,mBAoBnBkE,EApBmB,KAoBLC,EApBK,OAsBEnE,mBAAS4D,GAtBX,mBAsBnBQ,EAtBmB,KAsBXC,EAtBW,KAwB1BlE,qBAAU,WACR,IAAuB,IAAnB4D,EACF,OAAOI,GAAgB,GAEzBA,GAAgB,GAChBE,EAAUT,KACT,CAACG,EAAeH,IAEnB,IAIMU,EAAoBC,YAAOC,IAAPD,EAA+B,kBAAgB,CACvE,iBAAkB,CAAEE,UAAW,aADwB,EAAGC,MACNtC,QAAQC,QAAQC,UAGtE,OACE,mCACG4B,GACC,eAACS,EAAA,EAAD,CAAKrE,MAAM,OAAX,UACE,cAACsE,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CACEtB,GAAI,CAAEuB,SAAU,QAASC,OAAQ,EAAGC,KAAM,EAAGC,MAAO,EAAGC,OAAQ,UAC/DC,UAAW,EAFb,SAIE,cAACC,EAAA,EAAD,CACEC,YAAU,EACVC,MAAOlB,EACPmB,SApBa,SAACC,EAAGF,GAC3BjB,EAAUiB,IAoBA/B,GAAI,CAAEvB,gBAAiB,kBAJzB,SAMGmB,EAAaa,KAAI,SAACyB,GAAD,OAChB,cAACnB,EAAD,CAEEoB,UAAWC,IACXC,GAAIH,EAAK/B,KACT4B,MAAOG,EAAK/B,KACZmC,MAAOJ,EAAKrC,KAAK0C,cACjBzC,KAAMoC,EAAKpC,KACXE,GAAI,CACFwC,QAAS,OACTC,cAAe,MACfC,UAAW,IAAM9C,EAAa+C,QAAQC,WAAa,IACnD1B,UAAW,0BAVRgB,EAAKrC,mB,qHC7BbgD,EApCK,WAClB,IAAMC,EAAWC,cAGXC,EAAWC,aAAY,SAACC,GAAD,OAAWA,EAAMF,YASxCG,EAAc,CAClBjD,SAAU,GACVkD,QAAS,GACTC,WAAY,GACZ5E,gBAAiB,iBACjB6E,aAAc,MACdC,UACE,sGAGJ,OACE,cAACC,EAAA,EAAD,CACEC,QAAST,EACThB,SApBe,WACjBc,EAAS,CACPY,KAAM,aACNC,SAAUX,KAkBVY,aAAW,aACXC,MAAM,YACNC,YAAa,cAACC,EAAA,EAAD,CAAiBF,MAAM,UAAU7D,GAAImD,IAClDrD,KAAM,cAACkE,EAAA,EAAD,CAAkBH,MAAM,UAAU7D,GAAImD,IAC5CnD,GAAI,CAAEiE,cAAe,IAAKC,WAAY,IAAKnH,MAAO,OCkDzCoH,EArEK,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,UAgCxBC,EA/BU,CACd,CACEzE,KAAM,YACNC,KAAM,cAACC,EAAA,EAAD,CAAgB8D,MAAM,cAC5B1D,KAAM,IACNoE,QAAQ,EACRH,SAAS,GAEX,CACEvE,KAAM,UACNC,KAAM,cAACM,EAAA,EAAD,CAAiByD,MAAM,cAC7B1D,KAAM,UACNoE,QAAQ,EACRH,SAAS,GAEX,CACEvE,KAAM,kBACNC,KAAM,cAAC0E,EAAA,EAAD,CAAiBX,MAAM,cAC7B1D,KAAM,UACNoE,QAAQ,EACRH,SAAS,GAEX,CACEvE,KAAM,QACNC,KAAM,cAAC2E,EAAA,EAAD,CAAaZ,MAAM,cACzB1D,KAAM,QACNoE,QAAQ,EACRH,SAAS,IAImBM,QAAO,SAACxC,GAAD,OACrCkC,GAA2B,IAAjBlC,EAAKkC,SAAmC,IAAhBlC,EAAKqC,UAGzC,OACE,eAACI,EAAA,EAAD,CAAMC,MAAOR,IAAYC,EAAWrE,GAAIoE,GAAW,CAAE5B,QAAS,QAA9D,UACG8B,EAAgB7D,KAAI,SAACyB,GAAD,OACnB,cAAC2C,EAAA,EAAD,CACExF,SAAU+E,EACVU,gBAAc,EAEd9E,GAAIoE,GAAW,CAAErH,MAAO,eAJ1B,SAME,eAACgI,EAAA,EAAD,CACE5C,UAAWC,IACXC,GAAIH,EAAK/B,KACTH,GAAI,CAAEjD,MAAO,OAAQiI,SAAUZ,IAAYC,EAAY,EAAI,GAH7D,UAKiB,OAAdnC,EAAKpC,KAAgB,KACpB,cAACmF,EAAA,EAAD,CAAcjF,GAAI,CAAE0C,SAAU,IAA9B,SAAqCR,EAAKpC,OAE5C,cAACoF,EAAA,EAAD,CACEpG,QAASoD,EAAKrC,KACdsF,uBAAwB,CAAEtB,MAAO,YAAauB,MAAO,eAbpDlD,EAAKrC,SAkBbuE,GACC,cAACS,EAAA,EAAD,CAAUC,gBAAc,EAAC9E,GAAI,CAAEjD,MAAO,cAAesI,WAAYhB,EAAY,EAAI,KAAjF,SACE,cAAC,EAAD,U,kEC9EK,OAA0B,iCCiF1BiB,GA3ED,WAAO,IACXlB,EAAYnB,aAAY,SAACC,GAAD,OAAWA,EAAMqC,gBAAzCnB,QAGFoB,EAAYpB,EAAU,eAAiB,iBACvCqB,EAAYrB,EAAU,UAAY,YAExC,OACE,eAACsB,EAAA,EAAD,CACEC,WAAS,EACT1I,OAAO,OACPF,MAAM,cACN0F,cAAc,SACdmD,eAAe,WACfC,EAAG,IACHhC,MAAO2B,EAPT,WASIpB,GACA,eAACsB,EAAA,EAAD,CAAMC,WAAS,EAAClD,cAAc,SAA9B,UACE,cAACrB,EAAA,EAAD,CACEe,UAAU,MACVlF,OAAQ,GACRF,MAAO,GACP+I,IAAKC,GACLC,IAAI,sCAEN,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAK/D,UAAU,KAAKgE,SAAU,EAAlD,sBAKJ,cAACF,EAAA,EAAD,CAAYC,QAAQ,QAAQ/D,UAAU,IAAIiE,GAAI,EAA9C,iKAKA,eAACH,EAAA,EAAD,CAAYC,QAAQ,QAAQ/D,UAAU,IAAtC,gGAEa,IACX,cAACC,GAAA,EAAD,CACEiE,KAAK,mCACLC,OAAO,SACPC,UAAU,OACV1C,MAAO4B,EAJT,iCASF,eAACrE,EAAA,EAAD,CAAKe,UAAU,SAASqE,GAAI,EAA5B,UACE,eAACd,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACc,EAAA,EAAD,CACEJ,KAAK,4CACLC,OAAO,SAFT,SAIE,cAACI,EAAA,EAAD,CAAU7C,MAAO4B,EAAWvF,SAAS,YAEvC,cAACuG,EAAA,EAAD,CAAYJ,KAAK,kCAAkCC,OAAO,SAA1D,SACE,cAACK,GAAA,EAAD,CAAQ9C,MAAO4B,EAAWzF,GAAI,CAAEE,SAAU,WAG9C,eAAC+F,EAAA,EAAD,CACEC,QAAQ,QACR/D,UAAU,IACVK,QAAQ,OACRoE,WAAW,SAJb,8CAOE,cAACC,GAAA,EAAD,CAAkB3G,SAAS,QAAQF,GAAI,CAAE8G,QAAS,OACjD,IAAIC,MAAOC,wBClBPC,GAhDO,WAAM,MAGMxK,oBAAS,GAHf,mBAGnByK,EAHmB,KAGTC,EAHS,KAKpBC,EAAY,WAChBD,GAAaD,IAGf,OACE,qCACE,cAACT,EAAA,EAAD,CACEY,QAASD,EACTE,KAAK,MACLzD,MAAM,UACND,aAAW,OAJb,SAME,cAAC2D,EAAA,EAAD,CAAavH,GAAI,CAAEE,SAAU,QAE/B,eAACsH,EAAA,EAAD,CACEC,OAAO,QACPC,KAAMR,EACNS,QAASP,EACTQ,WAAY,CACV5H,GAAI,CAAEvB,gBAAiB,eAAgBoJ,SAAU,QALrD,UAQE,eAACnC,EAAA,EAAD,CAAMC,WAAS,EAACC,eAAe,gBAAgBgB,WAAW,SAA1D,UACE,cAAClB,EAAA,EAAD,CAAMxD,MAAI,EAAC4F,GAAI,EAAf,SACE,cAAC,EAAD,MAEF,cAACrB,EAAA,EAAD,CACEY,QAASD,EACTvD,MAAM,YACND,aAAW,aAHb,SAKE,cAACmE,EAAA,EAAD,CAAc/H,GAAI,CAAEE,SAAU,WAGlC,cAACkB,EAAA,EAAD,CAAKe,UAAU,MAAM6F,KAAK,aAAaX,QAASD,EAAhD,SACE,cAAC,EAAD,MAEF,cAAC,GAAD,WCjBOa,GA7BA,SAAC,GAAD,IAAG7D,EAAH,EAAGA,QAASC,EAAZ,EAAYA,UAAZ,OACb,qCACE,cAAC6D,EAAA,EAAD,CACElI,GAAI,CAAEvB,gBAAiB2F,EAAU,eAAiB,sBAClDxC,UAAYwC,EAAc,EAAJ,EAFxB,SAIE,eAAC/C,EAAA,EAAD,WACE,cAAC4E,EAAA,EAAD,CACEC,QAAQ,KACR/D,UAAU,KACV0B,MAAOO,EAAU,YAAc,UAC/B+D,WAAY,IACZC,SAAU,EALZ,8BASChE,EACC,cAAC,IAAD,CAAKjC,UAAU,MAAM6F,KAAK,aAA1B,SACE,cAAC,EAAD,CAAa5D,QAASA,EAASC,UAAWA,MAG5C,cAAC,GAAD,SAIN,cAAChD,EAAA,EAAD,CAASgH,GAAG,2BC7BD,OAA0B,oCCqE1BC,GA9DG,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,SAAUnE,EAA2B,EAA3BA,QAASoE,EAAkB,EAAlBA,YAChC1F,EAAWC,cACX0F,EAAWC,cAejB,OAZA9L,qBAAU,WACR,IAAM+L,EAAQC,YAAW,WAErBH,EADErE,EACO,QAEA,KAEXtB,EAAS,CAAEY,KAAM,YAAaC,SAAS,MACtC,KACH,OAAO,kBAAMkF,aAAaF,MACzB,CAACvE,EAAStB,EAAU2F,IAGrB,cAAC/C,EAAA,EAAD,CACEC,WAAS,EACTC,eAAe,SACfkD,aAAa,SACb/L,MAAOqH,EAAU,cAAgB,OACjC0D,GAAI1D,EAAUoE,EAAc,EAL9B,SAOE,eAAC9C,EAAA,EAAD,CAAMC,WAAS,EAACzD,MAAI,EAACO,cAAc,SAASmE,WAAW,SAASmC,EAAG,IAAnE,UACE,cAAC3H,EAAA,EAAD,CACEe,UAAU,MACVpF,MAAO,IACPE,OAAQ,IACRuJ,GAAI,EACJwC,GAAI,EACJlD,IAAKmD,GACLjD,IAAI,4CAEN,cAACC,EAAA,EAAD,CAAY9D,UAAU,IAAI+D,QAAQ,KAAKrC,MAAM,eAA7C,SACG0E,EAAW,2BAA6B,oBAE1CA,GACC,cAACtC,EAAA,EAAD,CACE9D,UAAU,IACV+D,QAAQ,QACRrC,MAAM,iBACNqF,GAAI,IAJN,gHAUF,cAACjD,EAAA,EAAD,CACE9D,UAAU,IACV+D,QAAQ,QACRrC,MAAM,iBACNqF,GAAI,IAJN,yDChCOC,GApBD,kBACZ,eAACzD,EAAA,EAAD,CAAMC,WAAS,EAAClD,cAAc,SAASmE,WAAW,SAAlD,UACE,cAACxF,EAAA,EAAD,CACEe,UAAU,MACVpF,MAAO,IACPE,OAAQ,IACRuJ,GAAI,EACJwC,GAAI,EACJlD,IAAKC,GACLC,IAAI,4CAEN,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKiC,WAAY,IAAKhG,UAAU,IAApD,0BAGA,cAAC8D,EAAA,EAAD,CAAYC,QAAQ,QAAQ/D,UAAU,KAAK6G,GAAI,EAAG5D,MAAM,SAAxD,6D,oBCNWgE,GATK,kBAChB,eAAC1D,EAAA,EAAD,CAAMC,WAAS,EAAClD,cAAc,SAASmE,WAAW,SAAlD,UACE,cAAC7G,EAAA,EAAD,CAAgBC,GAAI,CAAEE,SAAU,OAAQ2D,MAAO,iBAAkB2C,GAAI,SACrE,cAACP,EAAA,EAAD,CAAYC,QAAQ,KAAK/D,UAAU,IAAI0B,MAAM,iBAA7C,uC,oBCiBSwF,GAnBQ,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,WAAYC,EAAuB,EAAvBA,iBAC9BC,EAAaxI,YAAOyI,KAAPzI,EAAa,kBAAgB,CAC9C,mBAAoB,CAClB6C,MAF4B,EAAG1C,MAElBtC,QAAQI,KAAKH,aAI9B,OACE,cAAC0K,EAAD,CACE3F,MAAM,UACNqC,QAAQ,WACR5D,MAAOgH,EACPI,WAAY,cAACC,GAAA,EAAD,IACZC,SAAU,SAAC3H,GAAD,OAAOsH,EAAiBtH,EAAGqH,IACrCtJ,GAAI,CAAE6J,YAAa,MAAOpL,gBAAiB,qBCqBlCqL,GAjCE,WACf,IAAMhH,EAAWC,cACXgH,EAAc9G,aAAY,SAACC,GAAD,OAAWA,EAAM8G,YAE3CT,EAAmB,SAACtH,EAAGqH,GAC3B,IAAMW,EAAWF,EAAYrJ,QAAQ4I,GACrCxG,EAAS,CAAEY,KAAM,oBAAqBC,QAASsG,KAG3CC,EAAiBH,EAAYtJ,KAAI,SAAC6I,GAAD,OACrC,cAACa,GAAA,EAAD,UACE,cAACzE,EAAA,EAAD,CAAMxD,MAAI,EAAV,SACE,cAAC,GAAD,CACEoH,WAAYA,EACZC,iBAAkBA,OAJbD,MAUb,OACE,cAAC5D,EAAA,EAAD,CAAMC,WAAS,EAACC,eAAe,SAA/B,SAC0B,IAAvBmE,EAAYpH,OACX,cAAC,GAAD,IAEA,cAAC+C,EAAA,EAAD,CAAMC,WAAS,EAACzD,MAAI,EAACkI,QAAS,EAAGvC,SAAS,MAAMrB,GAAI,EAAGwC,GAAI,EAA3D,SACE,cAACqB,GAAA,EAAD,CAAiBlI,UAAW,KAA5B,SAAmC+H,S,8BCkB9BI,GA9CG,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,aAAcxI,EAA0B,EAA1BA,MAAOyI,EAAmB,EAAnBA,aAElCC,EAAwBzJ,YAAO0J,KAAP1J,EAAkB,YAAgB,IACxD2J,EADuD,EAAZxJ,MACxBtC,QAAQC,QAAQC,KACzC,MAAO,CACL,2BAA4B,CAC1B,aAAc,CACZ6L,YAAaD,EACbd,YAAa,MACbvG,aAAc,QAEhB,mBAAoB,CAClBsH,YAAaD,GAEf,yBAA0B,CACxBd,YAAa,YAMrB,OACE,cAACnE,EAAA,EAAD,CAAMC,WAAS,EAACC,eAAe,SAA/B,SACE,cAAC6E,EAAD,CACEjO,IAAKgO,EACLK,WAAS,EACT9I,MAAOA,EACPC,SAAUuI,EACVO,YAAY,cACZC,WAAY,CACVC,eACE,cAACC,GAAA,EAAD,CAAgB1J,SAAS,QAAzB,SACE,cAAC2J,GAAA,EAAD,CAAerH,MAAM,UAAU7D,GAAI,CAAEE,SAAU,SAIrDF,GAAI,CACF0C,SAAU,MACVY,aAAc,OACd7E,gBAAiB,uB,qECvCZ0M,GAJO,CAClBA,OAAQ,oCCGCC,GAAe,mDAEtBC,G,QAAMC,EAAMC,OAAO,CACvBC,QAJc,8BAKdC,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAKb,SAASC,GAAkB5J,EAAO6J,GACvC,OAAOP,GACJQ,IAAI,2BAA4B,CAC/BC,OAAO,6BACFX,IADC,IAEJY,MAAOhK,EACPiK,OAAQ,MAGXC,OAAM,SAACC,GAAD,OAAW3D,GAAS2D,MAC1BC,KAAKC,IACLD,KAAKP,GAKH,SAASS,GAAetK,EAAO2B,EAAM4I,EAAMN,EAAQJ,GACxD,IAAME,EAAM,6BACPX,IADO,IAEVoB,mBAAoBxK,EACpByK,KAAM,0BACNC,cAAe,MACfT,OAAQA,IAwBV,OAAOX,GACJQ,IAAI,yBAA0B,CAC7BC,YAtBWY,IAAThJ,QAA+BgJ,IAATJ,EACjB,6BACFR,GADL,IAEEpI,KAAMA,EACN4I,KAAMA,SAEUI,IAAThJ,EACF,6BACFoI,GADL,IAEEpI,KAAMA,SAEUgJ,IAATJ,EACF,6BACFR,GADL,IAEEQ,KAAMA,IAGH,gBAAKR,KAOXG,OAAM,SAACC,GAAD,OAAW3D,GAAS2D,MAC1BC,KAAKC,IACLD,KAAKP,GAIH,SAASe,GAAiB5K,EAAO6J,GACtC,OAAOP,GACJQ,IADI,mBACY9J,EADZ,gBACiC,CACpC+J,OAAO,gBACFX,MAGNc,OAAM,SAACC,GAAD,OAAW3D,GAAS2D,MAC1BC,KAAKS,IACLT,KAAKP,GAGV,SAASQ,GAAiBS,GACxB,OAAiB,MAAbA,EACKA,EAEFA,EAASC,KAAKC,QAKvB,SAASH,GAAcC,GACrB,YAAiBH,IAAbG,GAAuC,MAAbA,EACrBA,EAEFA,EAASC,KAIlB,SAASvE,GAAS2D,GAChB,OAAOA,EAAMW,SAASG,OAGxB,IC3BeC,GA5DO,SAAC,GAMhB,IALLlD,EAKI,EALJA,YACAmD,EAII,EAJJA,iBACAC,EAGI,EAHJA,WACAC,EAEI,EAFJA,OAKMC,EAAY9Q,EAHd,EADJ+Q,UAKMC,OAA+Bb,IAAdW,EAA0B,EAAIA,EAAUtQ,MAE/D,OACE,cAAC2I,EAAA,EAAD,CAAMC,WAAS,EAACC,eAAe,SAA/B,SACE,cAAC4H,GAAA,EAAD,CAAmBC,YAAaN,EAAhC,SACE,cAACxI,EAAA,EAAD,CACEC,OAAK,EACL5E,GAAI,CACFwC,QAAS,OACTC,cAAe,SACflB,SAAU,WACVxE,MAAOwQ,EACPG,OAAQ,YACR9C,YAAa,eACbtH,aAAc,OACd7E,gBAAiB,iBACjB+H,GAAI,EACJ7E,OAAQ,aAZZ,SAeGoI,EAAYtJ,KAAI,SAAC6I,GAAD,OACf,eAACzE,EAAA,EAAD,CAA8BC,gBAAc,EAAC9E,GAAI,CAAEgF,SAAU,GAA7D,UACE,cAAC2I,GAAA,EAAD,CAAgB3N,GAAI,CAAE0C,SAAU,QAAhC,SACE,cAACkL,GAAA,EAAD,CACE9H,IAAKsF,GAAe9B,EAAWuE,MAC/B7N,GAAI,CAAE6H,SAAU,GAAIiG,UAAW,QAGnC,cAAC5I,EAAA,EAAD,CACEpG,QAASwK,EAAWzJ,KACpBG,GAAI,CAAE+N,UAAW,SAAUlK,MAAO,kBAEpC,cAAC4C,EAAA,EAAD,CACEY,QAAS,SAACpF,GAAD,OAAOiL,EAAiBjL,EAAGqH,EAAWzJ,OAC/CG,GAAI,CAAE+I,EAAG,EAAGrG,SAAU,QAFxB,UAIwC,IAArC0K,EAAO1M,QAAQ4I,EAAWzJ,MACzB,cAACmO,GAAA,EAAD,CAAyBnK,MAAM,YAE/B,cAACoK,GAAA,EAAD,CAAoBpK,MAAM,gBAlBjByF,EAAWjB,c,UC+BvB6F,GAvEW,WACxB,IAAMpL,EAAWC,cACXyH,EAAe2D,mBAFS,EAUJ1R,mBAAS,IAVL,mBAUvBsF,EAVuB,KAUhBqM,EAVgB,OAWLC,uBAAYtM,EAAO,KAArCuM,EAXuB,sBAgBoB7R,mBAAS,IAhB7B,mBAgBvB8R,EAhBuB,KAgBJC,EAhBI,KAqB9B5R,qBAAU,WACJ0R,EAAe3L,QAAU,GAC3BgJ,GAAkB2C,GAAgB,SAACG,GACjC,GAAsB,MAAlBA,EACF,OAAO3L,EAAS,CAAEY,KAAM,YAAaC,SAAS,IAEhD6K,EAAqBC,MAIzBD,EAAqB,MACpB,CAACF,EAAgBxL,IAIpB,IAAMsK,EAASnK,aAAY,SAACC,GAAD,OAAWA,EAAM8G,YAe5C,OACE,eAAC,IAAD,CAAKzI,SAAS,WAAd,UACE,cAAC,GAAD,CACEiJ,aAAcA,EACdzI,MAAOA,EACPwI,aA3Ce,SAACtI,GAAD,OAAOmM,EAASnM,EAAEqE,OAAOvE,UA6CzCwM,EAAkB5L,OAAS,EAC1B,cAAC,GAAD,CACE2K,SAAU9C,EACVT,YAAawE,EACbrB,iBAxBiB,SAACjL,EAAGqH,GAC3B,IAAMoF,EAAkBtB,EAAO1M,QAAQ4I,GAEvC,IAAyB,IAArBoF,EACF,OAAO5L,EAAS,CAAEY,KAAM,oBAAqBC,QAAS+K,IAExD5L,EAAS,CAAEY,KAAM,iBAAkBC,QAAS2F,KAmBtC6D,WAhBW,WACjBiB,EAAS,KAgBHhB,OAAQA,IAER,SC7DKuB,GARF,kBACX,eAACjJ,EAAA,EAAD,CAAMC,WAAS,EAACzD,MAAI,EAAC0M,UAAU,SAA/B,UACE,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,QC6FWC,GA1FH,WACV,IAAMpG,EAAWC,cACX5F,EAAWC,cAEXwF,EAAWtF,aAAY,SAACC,GAAD,OAAWA,EAAM4L,mBAJ9B,EAKe7L,aAAY,SAACC,GAAD,OAAWA,EAAMqC,gBAApDnB,EALQ,EAKRA,QAASC,EALD,EAKCA,UACXrB,EAAWC,aAAY,SAACC,GAAD,OAAWA,EAAMF,YAIxC+L,EAAeC,YAAc,gCAEnCpS,qBAAU,WACRkG,EAAS,CAAEY,KAAM,aAAcC,QAASoL,MACvC,CAACjM,EAAUiM,IAKd,IAAME,EAAaC,YAAS,KAE5BtS,qBAAU,WACJwH,GAAW6K,GACbxG,EAAS,aAEV,CAACrE,EAAS6K,EAAYxG,IAKzB,IAAM0G,EAAUhB,mBACViB,EAAO7S,EAAc4S,GACrBE,OAAqB3C,IAAT0C,EAAqB,EAAIA,EAAKrS,MAE1CyL,EAAcnE,GACH,GAAZgL,GAAiBzM,WAAa,MAClB,GAAZyM,GAAiBzM,WAAa,KAE7B0M,EAAkBtO,YAAOwG,IAAPxG,EAAe,gBAAGG,EAAH,EAAGA,MAAH,MAAgB,CACrD,sBAAuB,CACrBpE,MAAOyL,EACP+G,WAAY,GAEd,qBAAsB,CACpBxS,MAAOyL,EACPgH,UAAW,aACX7N,OAAQ,KACRlD,gBAAiB0C,EAAMtC,QAAQK,WAAWE,QAC1CqQ,YAAa,YAIXC,EAAStL,EACb,cAAChD,EAAA,EAAD,CAAK0G,GAAIU,EAAT,SACE,cAAC,IAAD,MAGF,cAAC,IAAD,IAGF,OACE,eAACmH,EAAA,EAAD,CACExO,MAAO6B,EAAWtD,EAAsBF,EAD1C,UAGE,cAACoQ,EAAA,EAAD,IACA,eAACxO,EAAA,EAAD,CAAK5E,IAAK2S,EAASU,UAAU,QAAQpR,gBAAgB,qBAArD,UACE,cAAC,GAAD,CAAQ2F,QAASA,EAASC,UAAWA,IACpCD,GACC,eAACkL,EAAD,CAAiBpJ,QAAQ,YAAzB,UACE,cAAC7E,EAAA,EAAD,IACA,cAACqE,EAAA,EAAD,CAAMC,WAAS,EAACmK,SAAS,OAAO7S,OAAO,QAAvC,SACE,cAAC,GAAD,SAILsL,EACC,cAAC,GAAD,CACEA,SAAUA,EACVnE,QAASA,EACToE,YAAaA,IAGfkH,GAEAtL,GAAW,cAAC,EAAD,W,UCnEN2L,GA1BG,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,QACb7M,EAAc,CAAEjD,SAAU,OAAQ2D,MAAO,iBAAkBmF,GAAI,GAE/DiH,EAHqC,EAAfC,SAIxB,oCACA,uCAEJ,OACE,cAACxK,EAAA,EAAD,CAAMC,WAAS,EAACC,eAAe,SAASkD,aAAa,SAArD,SACE,eAACpD,EAAA,EAAD,CAAMC,WAAS,EAAClD,cAAc,SAASmE,WAAW,SAASJ,GAAG,OAA9D,UACGwJ,EACC,cAACxL,EAAA,EAAD,CAAiBxE,GAAImD,IAErB,cAAC/C,EAAA,EAAD,CAAiBJ,GAAImD,IAEvB,cAAC8C,EAAA,EAAD,CAAY9D,UAAU,IAAI+D,QAAQ,KAAKrC,MAAM,iBAA7C,+BAGA,cAACoC,EAAA,EAAD,CAAY9D,UAAU,IAAI+D,QAAQ,QAAQrC,MAAM,iBAAhD,SACGmM,EAAU,8BAAgCC,U,sECLtCE,GAdW,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACrBC,EAAO,0BAAsBD,EAAtB,sBACI,IAAfA,EAAmB,IAAM,MAG3B,OACE,cAACE,GAAA,EAAD,CAASC,MAAOF,EAASG,WAAY,IAAKC,WAAY,IAAKC,gBAAiB,EAA5E,SACE,cAACjK,EAAA,EAAD,CAAYzG,GAAI,CAAE2Q,UAAW,YAA7B,SACE,cAACC,GAAA,EAAD,CAAqB/M,MAAM,iBC0EpBgN,GAxEI,SAAC,GAOb,IANLxI,EAMI,EANJA,GACAkI,EAKI,EALJA,MACA1C,EAII,EAJJA,MACAuC,EAGI,EAHJA,WACAU,EAEI,EAFJA,cACAC,EACI,EADJA,eAGMC,OACWtE,IAAf0D,EAAgC,WAAa,gBAGzCa,EAAc,CAClB5I,GAAIA,EACJkI,MAAOA,EACP1C,MAAOA,GAGT,OACE,eAACqD,GAAA,EAAD,CACElR,GAAI,CACFwC,QAAS,OACTC,cAAe,SACfoN,UAAW,OACXvM,aAAc,OACd7E,gBAAiB,mBACjB8E,UAAW,uCAPf,UAUE,eAAC4N,GAAA,EAAD,CACEhP,UAAWC,IACXC,GAAE,UAAKgG,GACPrI,GAAI,CACFwC,QAAS,OACTC,cAAe,SACfmD,eAAgB,QAChBwC,SAAU,GAPd,UAUE,cAACgJ,GAAA,EAAD,CAAWjP,UAAU,MAAM0L,MAAOA,EAAO7H,IAAKuK,IAC9C,cAACc,GAAA,EAAD,CAAarR,GAAI,CAAE+I,EAAG,EAAG3C,GAAI,GAA7B,SACE,cAACH,EAAA,EAAD,CAAY9D,UAAU,KAAK+D,QAAQ,QAAQiC,WAAY,IAAvD,SACGoI,SAIP,eAACe,GAAA,EAAD,CACEtR,GAAI,CACFwC,QAAS,OACToD,eAAgBoL,EAChBjI,EAAG,GAJP,eAOkB2D,IAAf0D,EAAgC,KAC/B,cAACmB,GAAD,CAAmBnB,WAAYA,IAEjC,cAAC3J,EAAA,EAAD,CACEY,QAAS,SAACpF,GAAD,OAAO6O,EAAc7O,EAAGgP,IACjCjR,GAAI,CAAE2Q,UAAW,YAFnB,UAI+D,IAA5DI,EAAeS,WAAU,SAACC,GAAD,OAAYA,EAAOpJ,KAAOA,KAClD,cAAC7D,EAAA,EAAD,IAEA,cAACA,EAAA,EAAD,CAAiBxE,GAAI,CAAE6D,MAAO,sB,UClE3B6N,GARC,kBACd,cAAChM,EAAA,EAAD,CAAMC,WAAS,EAACC,eAAe,SAA/B,SACE,cAACxE,EAAA,EAAD,CAAKyE,EAAE,OAAP,SACE,cAAC8L,GAAA,EAAD,CAAkBC,KAAM,IAAK/N,MAAM,iB,wCCsC1BgO,GAzCG,SAAC,GAAiB,IAAfzN,EAAc,EAAdA,QACb0N,EAAUC,aAAiB,CAC/BC,mBAAmB,IAiBfC,EAAejR,YAAOkR,KAAPlR,EAAY,kBAAgB,CAC/C,gBAAiB,CACf,UAAW,CACTvC,gBAH2B,EAAG0C,MAGPtC,QAAQC,QAAQC,WAK7C,OACE,cAACoT,GAAA,EAAD,CAAMC,GAAIN,EAAV,SACE,cAACG,EAAD,CACE5K,QAzBc,SAACgL,GACnB,IAAM5K,GAAU4K,EAAM/L,OAAOgM,eAAiBC,UAAUC,cACtD,uBAGE/K,GACFA,EAAOgL,eAAe,CACpBC,SAAU,SACVC,MAAO,YAkBP9O,MAAM,UACND,aAAW,qBACX5D,GAAI,CAAEuB,SAAU,QAASC,OAAQ4C,EAAU,GAAK,GAAI1C,MAAO,IAJ7D,SAME,cAACkR,GAAA,EAAD,CAAwB/O,MAAM,YAAY7D,GAAI,CAAEE,SAAU,WCiBnD2S,GAjDI,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,QAAS1O,EAAc,EAAdA,QACvBtB,EAAWC,cACXgO,EAAiB9N,aAAY,SAACC,GAAD,OAAWA,EAAM6N,kBAI9CD,EAAgB,SAAC7O,EAAG+N,GACxB,IAAM+C,EAAahC,EAAeS,WAChC,SAACC,GAAD,OAAYA,EAAOpJ,KAAO2H,EAAQ3H,MAGpC,IAAoB,IAAhB0K,EACF,OAAOjQ,EAAS,CAAEY,KAAM,iBAAkBC,QAASoP,IAErDjQ,EAAS,CAAEY,KAAM,cAAeC,QAASqM,KAGrCgD,EAAaF,EAAQrS,KAAI,SAACgR,GAAD,OAC7B,cAAC/L,EAAA,EAAD,CAAsBC,WAAS,EAACzD,MAAI,EAACzE,GAAI,EAAGE,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAA9D,SACE,cAAC,GAAD,CACEwK,GAAIoJ,EAAOpJ,GACXkI,MAAOkB,EAAOlB,MACd1C,MAAO4D,EAAO5D,MACduC,WAAYqB,EAAOwB,sBACnBnC,cAAeA,EACfC,eAAgBA,KAPTU,EAAOpJ,OAYpB,OACE,mCACyB,IAAtB2K,EAAWrQ,OACV,cAAC,GAAD,IAEA,eAAC+C,EAAA,EAAD,CACEC,WAAS,EACTuN,QAAS,CAAEzV,GAAI,EAAGE,GAAI,EAAGC,GAAI,GAAIC,GAAI,IACrCuM,QAAS,EACTrB,EAAG,EAJL,UAMGiK,EACD,cAAC,GAAD,CAAW5O,QAASA,U,sEC6Cf+O,GArFM,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,mBAE1BC,EAAgBtS,YAAOuS,KAAPvS,CAA0B,CAC9C,8BAA+B,CAC7BwB,QAAS,OACTgR,SAAU,WACVnQ,UAAW,OACXoQ,aAAc,QAEhB,qDAAsD,CACpD/F,OAAQ,YACRpK,aAAc,QAEhB,sDAAuD,CACrDoK,OAAQ,YACRpK,aAAc,UAKZoQ,EAAW1S,YAAO2S,KAAP3S,EAAqB,gBAAGG,EAAH,EAAGA,MAAH,MAAgB,CACpD,yBAA0B,CACxBiC,QAAS,WACTwQ,YAAa,MACbvQ,UAAW,MACX,UAAW,CACT5E,gBAAiB,6BAEnB,iBAAkB,CAChBA,gBAAgB,GAAD,OAAK0C,EAAMtC,QAAQC,QAAQC,MAC1C2O,OAAQ,wBACR,UAAW,CACTjP,gBAAiB,mCASzB,OACE,mCACG2U,EAAS3S,KAAI,SAACiD,GACb,OACE,eAAC,IAAD,CAEExC,UAAU,YACV0J,YAAY,eACZrJ,SAAS,WAJX,UAME,cAAC0E,EAAA,EAAD,CACEC,QAAQ,QACR/D,UAAU,KACV0B,MAAM,UACN5D,GAAI,EACJ4T,QAAQ,qBACRtS,SAAS,WACTuS,IAAI,QAPN,SASGpQ,EAAK7D,KAAK0C,gBAEb,cAAC+Q,EAAD,CACEvR,MAAO2B,EAAKqQ,aACZC,WAAS,EACThS,SAAU,SAACC,GAAD,OAAOoR,EAAmBpR,EAAGyB,EAAK7D,OAC5CgE,MAAM,YAJR,SAMGH,EAAKuQ,QAAQxT,KAAI,SAACyB,GAAD,OAChB,cAACwR,EAAD,CAEE3R,MAAOG,EACPlC,GAAI,CAAE6D,MAAO,gBAHf,SAKG3B,GAJIA,UAxBNwB,EAAK7D,YC6CPqU,GAzFC,SAAC,GAA4C,IAA1Cb,EAAyC,EAAzCA,mBAAoBc,EAAqB,EAArBA,SAAU7H,EAAW,EAAXA,KAEzC8H,OAAyB1H,IAAbyH,QAAmCzH,IAATJ,EAEtC8G,EAAW,CACf,CACEvT,KAAM,YACNkU,aAAcI,EACdF,QAAS,CACP,cACA,YACA,OACA,QACA,UACA,QACA,cAGJ,CACEpU,KAAM,kBACNkU,aAAczH,EACd2H,QAAS,CACP,cACA,YACA,aACA,QACA,cACA,WAMAI,EAAgBrT,YAAOsT,KAAPtT,EAAyB,YAAgB,IAAbG,EAAY,EAAZA,MAC1CoT,EAAeH,EACjBjT,EAAMtC,QAAQI,KAAKD,UACnBmC,EAAMtC,QAAQC,QAAQC,KAC1B,MAAO,CACL,6BAA8B,CAC5B0D,cAAe,cACfY,UAAW,OACXtG,MAAO,eAET,iCAAkC,CAChCyX,YAAa,QAEf,2CAA4C,CAC1CpR,QAAS,WACTS,MAAM,GAAD,OAAK0Q,GACV7G,OAAO,aAAD,OAAe6G,GACrBjR,aAAc,OACd,iBAAkB,CAChBmR,UAAW,OACX5Q,MAAM,GAAD,OAAK1C,EAAMtC,QAAQG,UAAUD,MAClCN,gBAAgB,GAAD,OAAK8V,SAM5B,OACE,eAACG,GAAA,EAAD,CACEC,QAAM,EACNC,gBAAc,EACd5U,GAAI,CAAEuD,UAAW,OAAQ9E,gBAAiB,sBAH5C,UAKE,cAAC4V,EAAD,CACEQ,WACET,EAAY,cAACU,GAAA,EAAD,IAA2B,cAACC,GAAA,EAAD,IAF3C,SAKGX,EACC,cAACnO,EAAA,EAAD,CAAYjG,GAAI,CAAE6D,MAAO,kBAAzB,iCAIA,cAACoC,EAAA,EAAD,CAAYpC,MAAM,UAAlB,wCAGJ,cAACmR,GAAA,EAAD,UACE,cAAC,GAAD,CACE5B,SAAUA,EACVC,mBAAoBA,UCgBf4B,GAnGC,WACd,IAAMnS,EAAWC,cACTqB,EAAYnB,aAAY,SAACC,GAAD,OAAWA,EAAMqC,gBAAzCnB,QACF8Q,EAAcjS,aAAY,SAACC,GAAD,OAAWA,EAAM8G,YAH7B,EAMYvN,qBANZ,mBAMb0X,EANa,KAMHgB,EANG,OAOI1Y,qBAPJ,mBAOb6P,EAPa,KAOP8I,EAPO,OAuBoB3Y,mBAAS,IAvB7B,mBAuBb4Y,EAvBa,KAuBCC,EAvBD,OAwBkB7Y,oBAAS,GAxB3B,mBAwBb8Y,EAxBa,KAwBAC,EAxBA,OAuCU/Y,mBAAS,IAvCnB,mBAuCbqW,EAvCa,KAuCJ2C,EAvCI,KAyCpB7Y,qBAAU,WACJsY,EAAYvS,OAAS,GACvB0J,GACE6I,EAAYtS,WACZuR,EACA7H,EACA+I,EAAazS,YACb,SAAC6L,GACC,GAAsB,MAAlBA,EACF,OAAO3L,EAAS,CAAEY,KAAM,YAAaC,SAAS,IAE5C8K,EAAc9L,OAAS,KAAO,GAChC6S,GAAe,GAEb/G,EAAc9L,OAAS,KAAO,GAChC6S,GAAe,GAEjB1S,EAAS,CAAEY,KAAM,YAAaC,SAAS,IACvC8R,EAAWhH,QAIhB,CAACyG,EAAaG,EAAcvS,EAAUqR,EAAU7H,IAInD,IAAMoJ,EACe,IAAnB5C,EAAQnQ,aAA8B+J,IAAbyH,QAAmCzH,IAATJ,EAGjD,cAAC,KAAD,CACEqJ,WAAY7C,EACZ8C,KA/CmB,WACF,MAAjBP,IAAwC,IAAhBE,GAG5BD,EAAgBD,EAAe,KA4C3BQ,SAAUN,EAHZ,SAKE,cAAC,GAAD,CAAYzC,QAASA,EAAS1O,QAASA,MAPzC,cAAC,GAAD,CAAW8L,UAAU,IAWzB,OACE,qCAC0B,IAAvBgF,EAAYvS,OACX,cAAC,GAAD,IAEA,qCACE,cAAC,GAAD,CACE0Q,mBA9EiB,SAACpR,EAAG6T,GAC7B,MAAe,cAAXA,EACK3B,IAAalS,EAAEqE,OAAOvE,MACzBoT,OAAYzI,GACZyI,EAAYlT,EAAEqE,OAAOvE,OACL,oBAAX+T,EACFxJ,IAASrK,EAAEqE,OAAOvE,MACrBqT,OAAQ1I,GACR0I,EAAQnT,EAAEqE,OAAOvE,YAHhB,GA0ECoS,SAAUA,EACV7H,KAAMA,IAEPoJ,KAGL,cAAC,IAAD,QCnFSK,GAfC,WACd,IAAMhF,EAAiB9N,aAAY,SAACC,GAAD,OAAWA,EAAM6N,kBAEpD,OACE,qCAC6B,IAA1BA,EAAepO,OACd,cAAC,GAAD,CAAWqN,SAAS,IAEpB,cAAC,GAAD,CAAY8C,QAAS/B,IAEvB,cAAC,IAAD,Q,oBCeS9I,GA3BA,SAAC,GAAD,IAAG+N,EAAH,EAAGA,iBAAkBnI,EAArB,EAAqBA,MAArB,OACb,cAACnI,EAAA,EAAD,CACEC,WAAS,EACTzD,MAAI,EACJ0D,eAAe,WACfgB,WAAW,aACXiJ,UAAU,OACVgE,QAAQ,iBACRoC,aAAa,YACbrL,YAAY,eACZ5K,GAAI,CACFd,WAAW,OAAD,OAAS2O,EAAT,eACVqI,eAAgB,QAChBC,mBAAoB,UAZxB,SAeE,cAACjE,GAAA,EAAD,CACEtO,aAAW,QACXC,MAAM,UACNwD,QAAS2O,EACThW,GAAI,CAAEvB,gBAAiB,iBAAkB2X,GAAI,EAAG5P,GAAI,EAAGuC,EAAG,IAJ5D,SAME,cAAChB,EAAA,EAAD,CAAclE,MAAM,UAAU7D,GAAI,CAAEE,SAAU,WCsBrCmW,GA7CG,SAAC,GAAkD,IAC7DC,EAAQ,CACZ,CAAEzW,KAAM,KAAMmG,IAAK,cAAeuQ,KAF8B,EAA/CC,YAGjB,CAAE3W,KAAM,KAAMmG,IAAK,aAAcuQ,KAH+B,EAAnCE,WAI7B,CAAE5W,KAAM,IAAKmG,IAAK,aAAcuQ,KAJgC,EAAxBG,YAKxC,CAAE7W,KAAM,KAAMmG,IAAK,QAASuQ,KALoC,EAAZI,QAQhDC,EAAY,CAChBlJ,OAAQ,YACR9C,YAAa,iBACbnM,gBAAiB,cACjBoF,MAAO,iBACPsE,WAAY,IACZjI,SAAU,GACVnD,MAAO,GACPE,OAAQ,IAGV,OACE,cAACyI,EAAA,EAAD,CAAMC,WAAS,EAACzD,MAAI,EAACkI,QAAS,EAA9B,SACGkM,EAAM7V,KAAI,SAACyB,GAAD,OACT,cAACwD,EAAA,EAAD,CAAsBxD,MAAI,EAA1B,SACE,cAACoO,GAAA,EAAD,CAASC,MAAOrO,EAAK8D,IAAKwK,WAAY,IAAKC,WAAY,IAAKC,gBAAiB,EAA7E,SACE,cAAC9C,GAAA,EAAD,CACE5H,IAAK9D,EAAK8D,IACVhG,GACEkC,EAAKqU,KAAL,6BAESK,GAFT,IAGMhM,YAAa,eACb/G,MAAO,iBAET+S,EATR,SAYG1U,EAAKrC,UAdDqC,EAAKrC,Y,oBCuBTgX,GA5CF,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,eAAgBC,EAAkB,EAAlBA,YACxBC,EAAQ,CACZ,CACE3O,GAAI,EACJpJ,KAAK,GAAD,OAAK6X,EAAL,YACJjT,MAAO,eACP/D,KAAM,cAACmX,GAAA,EAAD,CAAmB/W,SAAS,QAAQ2D,MAAM,aAElD,CACEwE,GAAI,EACJpJ,KAAK,gBAAD,OAAkB8X,GACtBlT,MAAO,UACP/D,KACE,cAACoX,GAAA,EAAD,CAAuBhX,SAAS,QAAQF,GAAI,CAAE6D,MAAO,eAK3D,OACE,cAAC6B,EAAA,EAAD,CAAMC,WAAS,EAACzD,MAAI,EAAC0D,eAAe,gBAApC,SACGoR,EAAMvW,KAAI,SAACyB,GAAD,OACT,eAACwD,EAAA,EAAD,CAEEC,WAAS,EACTzD,MAAI,EACJ0E,WAAW,SACXuQ,KAAK,SACLpa,MAAM,cANR,UAQGmF,EAAKpC,KACN,cAACmG,EAAA,EAAD,CACEC,QAAQ,QACRiC,WAAY,IACZiP,GAAI,GACJpX,GAAI,CAAE6D,MAAO3B,EAAK2B,OAJpB,SAMG3B,EAAKjD,SAdHiD,EAAKmG,UCSLc,GA9BD,SAAC,GAAD,IACZoH,EADY,EACZA,MACAuG,EAFY,EAEZA,eACAC,EAHY,EAGZA,YACAP,EAJY,EAIZA,WACAC,EALY,EAKZA,UACAC,EANY,EAMZA,WACAC,EAPY,EAOZA,MAPY,OASZ,eAACjR,EAAA,EAAD,CAAMC,WAAS,EAACzD,MAAI,EAACgH,GAAI,IAAzB,UACE,cAAC,GAAD,CAAM4N,eAAgBA,EAAgBC,YAAaA,IACnD,cAAC9Q,EAAA,EAAD,CACEC,QAAQ,KACR/D,UAAU,KACVkG,GAAG,uBACHa,GAAI,EACJ9C,GAAI,EACJ+B,WAAY,IANd,SAQGoI,IAEH,cAAC,GAAD,CACEiG,WAAYA,EACZC,UAAWA,EACXC,WAAYA,EACZC,MAAOA,QCQEU,GAnCQ,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,oBAAqBC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAIvDvN,EAAiBoN,EAAoB7W,KAAI,SAACyB,GAC9C,IAAMwV,EACExV,EAAKyV,SAASD,OAAOE,UADvBF,GAEMxV,EAAKyV,SAASD,OAAOG,OAASL,EAAYC,GAASK,QAAQ,GAEjEC,EACE7V,EAAKyV,SAASI,GAAGH,UADnBG,GAEM7V,EAAKyV,SAASI,GAAGF,OAASL,EAAYC,GAASK,QAAQ,GAGnE,OACE,cAACjT,EAAA,EAAD,CAAwBC,gBAAc,EAAtC,SACE,cAACI,EAAA,EAAD,CACEpG,QACE,qCACE,cAACmH,EAAA,EAAD,CAAYkC,WAAY,IAAK3F,QAAQ,SAArC,SACY,WAAT+U,EACGG,EAAgB,IAAMA,EACtBK,EAAY,IAAMA,IAExB,eAAC9R,EAAA,EAAD,CAAYzD,QAAQ,SAApB,UAA8B,IAAKN,EAAKrC,cATjCqC,EAAKmG,OAiBxB,OAAO,cAAC1D,EAAA,EAAD,CAAMC,OAAK,EAAX,SAAasF,K,oBCyCP8N,GAvEE,SAAC,GAA2D,IAAzDP,EAAwD,EAAxDA,QAASQ,EAA+C,EAA/CA,cAAeC,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,cAEhDC,EAAgBpX,YAAO0J,KAAP1J,EAAkB,YAAgB,IAChD2J,EAD+C,EAAZxJ,MAChBtC,QAAQC,QAAQC,KACzC,MAAO,CACL,2BAA4B,CAC1BhC,MAAO,QACP,UAAW,CACTqG,QAAS,QACT2K,UAAW,UAEb,aAAc,CACZlE,YAAa,MACbvG,aAAc,OACdsH,YAAaD,GAEf,mBAAoB,CAClBC,YAAaD,IAGjB,wBAAyB,CACvB9G,MAAO8G,OAKP0N,EACJ,cAACpN,GAAA,EAAD,CAAgB1J,SAAS,MAAzB,SACE,cAACkF,EAAA,EAAD,CACE4B,GAAG,MACHzE,aAAW,cACX0D,KAAK,MACLtH,GAAI,CAAE+I,EAAG,GACT1B,QAAS6Q,EALX,SAOE,cAACI,GAAA,EAAD,CAAYzU,MAAM,gBAKlB0U,EACJ,cAACtN,GAAA,EAAD,CAAgB1J,SAAS,QAAzB,SACE,cAACkF,EAAA,EAAD,CACE4B,GAAG,SACHzE,aAAW,iBACX0D,KAAK,QACLtH,GAAI,CAAE+I,EAAG,GACT1B,QAAS8Q,EALX,SAOE,cAACK,GAAA,EAAD,CAAe3U,MAAM,gBAK3B,OACE,cAACuU,EAAD,CACE/P,GAAG,iBACH/F,MAAM,WACNuB,MAAM,UACN9B,MAAO0V,EACPzV,SAAUiW,EACVpN,WAAS,EACT4N,gBAAiB,CACfC,QAAQ,GAEV3N,WAAY,CAAEC,eAAgBuN,EAAUI,aAAcN,GACtDO,WAAY,CAAEC,UAAW,cC5BhBC,GAvCK,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,iBAAkBxB,EAAW,EAAXA,KAOjCyB,EAAuBhY,YAAOuS,KAAPvS,EAA0B,kBAAgB,CACrE,kCAAmC,CACjC0M,OAAQ,YACR9C,YAHmD,EAAGzJ,MAGnCtC,QAAQC,QAAQC,KACnCuE,aAAc,OACdF,QAAS,gBAIb,OACE,cAAC4V,EAAD,CACEjX,MAAOwV,EACPvD,WAAS,EACThS,SAAU+W,EACVnV,aAAW,eACXC,MAAM,UACN+N,KAAK,QANP,SAhBqB,CACrB,CAAE/R,KAAM,KAAMoZ,KAAM,YACpB,CAAEpZ,KAAM,SAAUoZ,KAAM,iBAsBNxY,KAAI,SAACyB,GAAD,OAClB,cAACyR,GAAA,EAAD,CAEE5R,MAAOG,EAAKrC,KACZ+D,aAAY1B,EAAK+W,KACjBjZ,GAAI,CAAE6D,MAAO,gBAJf,SAMG3B,EAAKrC,MALDqC,EAAKrC,YCuCLqZ,GA/DK,SAAC,GAAuC,IAArC5B,EAAoC,EAApCA,oBAAqBE,EAAe,EAAfA,SAAe,EAG3B/a,mBAAS+a,GAHkB,mBAGlDC,EAHkD,KAGzC0B,EAHyC,OAyBjC1c,mBAAS,MAzBwB,mBAyBlD8a,EAzBkD,KAyB5C6B,EAzB4C,KAiCzD,OACE,eAAC1T,EAAA,EAAD,CAAMC,WAAS,EAACzD,MAAI,EAAC0M,UAAU,SAAS1F,GAAI,EAA5C,UACE,eAACxD,EAAA,EAAD,CACEC,WAAS,EACTzD,MAAI,EACJ0D,eAAe,gBACfgB,WAAW,SACXR,GAAI,EALN,UAOE,cAAC,GAAD,CACEqR,QAASA,EACTQ,cAtCc,SAAChW,GACrB,IAAMF,EAAQE,EAAEqE,OAAOvE,OAGT,KAAVA,GAFQ,aAEYsX,KAAKtX,KAC3BoX,EAAWpX,IAkCPmW,WA7BW,kBAAMiB,EAAW1B,EAAU,IA8BtCU,cA5Bc,WAChBV,EAAU,GACZ0B,EAAW1B,EAAU,MA4BnB,cAAC,GAAD,CAAasB,iBArBA,SAAC9W,EAAGF,GACP,OAAVA,GACFqX,EAAQrX,IAmBqCwV,KAAMA,OAEnD,cAACtR,EAAA,EAAD,CAAYC,QAAQ,KAAK/D,UAAU,KAAK0B,MAAM,UAAUsE,WAAY,IAApE,yBAGA,cAAC,GAAD,CACEmP,oBAAqBA,EACrBC,KAAMA,EACNC,SAAUA,EACVC,QAASA,QCEF6B,GA7DM,SAAC,GAA8B,IAC5CC,EAD2C,EAA3BC,qBACoB/Y,KAAI,SAACyB,GAE7C,IAAMuX,EAAYvX,EAAKwX,MAAMjZ,KAAI,SAACkZ,GAAD,OAC/B,cAAC9U,EAAA,EAAD,CAA4BC,gBAAc,EAA1C,SACE,cAACI,EAAA,EAAD,CACEpG,QACE,qCACE,eAACmH,EAAA,EAAD,CAAYkC,WAAY,IAAK3F,QAAQ,SAArC,UACGmX,EAAK3N,OACL,QAEH,cAAC/F,EAAA,EAAD,CAAYzD,QAAQ,SAApB,SAA8BmX,EAAKA,aAR5BA,EAAK3N,WAiBtB,MAAqB,KAAd9J,EAAKrC,KACV,cAAC8E,EAAA,EAAD,CAAMC,OAAK,EAAX,SACG6U,GADc,aAIjB,eAAC/T,EAAA,EAAD,CAAMC,WAAS,EAACzD,MAAI,EAApB,UACE,cAAC+D,EAAA,EAAD,CACEC,QAAQ,KACR/D,UAAU,KACV0B,MAAM,UACNsE,WAAY,IAJd,SAMGjG,EAAKrC,OAER,cAAC8E,EAAA,EAAD,CAAMC,OAAK,EAAX,SAAa6U,MATWvX,EAAKrC,SAcnC,OACE,eAAC6F,EAAA,EAAD,CAAMC,WAAS,EAACzD,MAAI,EAAC0M,UAAU,SAAS1F,GAAI,EAA5C,UACE,cAACjD,EAAA,EAAD,CAAYC,QAAQ,KAAK/D,UAAU,KAAK0B,MAAM,UAAUsE,WAAY,IAApE,0BAGCoR,EACD,eAAC7T,EAAA,EAAD,CAAMC,WAAS,EAACzD,MAAI,EAAC0M,UAAU,SAAShI,WAAW,SAASsC,GAAI,IAAhE,UACE,cAAC9H,EAAA,EAAD,CACEe,UAAU,MACVnC,GAAI,CAAE/C,OAAQ,GAAIF,MAAO,IACzB+I,IAAKC,GACLC,IAAI,sCAEN,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAK/D,UAAU,IAAI0B,MAAM,UAAUsE,WAAY,IAAnE,oCCpCOyR,GAlBA,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAYC,EAAf,EAAeA,UAAf,OACb,cAACpU,EAAA,EAAD,CAAMxD,MAAI,EAACgH,GAAI,IAAKF,GAAI,EAAxB,SACE,eAAC/C,EAAA,EAAD,CACEC,QAAQ,QACR/D,UAAU,IACVK,QAAQ,OACRoE,WAAW,SACX5G,GAAI,CAAE6D,MAAO,kBALf,uBAOY,cAACgD,GAAA,EAAD,CAAkB3G,SAAS,QAAQF,GAAI,CAAE8G,QAAS,MAP9D,YASE,cAAC1E,GAAA,EAAD,CAAMiE,KAAMyT,EAAWxT,OAAO,SAASC,UAAU,OAAOvG,GAAI,CAAE8H,GAAI,IAAlE,SACG+R,UCuHME,GAzHO,WACpB,IAAMtR,EAAWC,cACX5F,EAAWC,cACTqB,EAAYnB,aAAY,SAACC,GAAD,OAAWA,EAAMqC,gBAAzCnB,QAHkB,EAMF3H,oBAAS,GANP,mBAMnBiL,EANmB,KAMbsS,EANa,KAUpBhE,EAAmB,WACvBgE,GAAQ,GACRpR,WAAWqR,EAAa,MAMpBC,EAAehL,YAAS,cAExB+K,EAAc,WAClB,GAAIC,EACF,OAAOzR,EAAS,YAElBA,EAAS,aAIHJ,EAAO8R,cAAP9R,GA5BkB,EA+BQ5L,oBAAS,GA/BjB,mBA+BnB2d,EA/BmB,KA+BRC,EA/BQ,OAkCgB5d,mBAAS,IAlCzB,mBAkCnB6d,EAlCmB,KAkCJC,EAlCI,KAsCxB1M,EAaEyM,EAbFzM,MACA0C,EAYE+J,EAZF/J,MACAuG,EAWEwD,EAXFxD,eACAC,EAUEuD,EAVFvD,YACAP,EASE8D,EATF9D,WACAC,EAQE6D,EARF7D,UACAE,EAOE2D,EAPF3D,MACAD,EAME4D,EANF5D,WACAY,EAKEgD,EALFhD,oBACAE,EAIE8C,EAJF9C,SACAgC,EAGEc,EAHFd,qBACAK,EAEES,EAFFT,WACAC,EACEQ,EADFR,UAGFld,qBAAU,WACR+P,GAAiBtE,GAAI,SAACoG,GACpB,OAAsB,MAAlBA,EACK3L,EAAS,CAAEY,KAAM,YAAaC,SAAS,KAEhDb,EAAS,CAAEY,KAAM,YAAaC,SAAS,SAEjB+I,IAAlB+B,EACK4L,GAAa,IAEtBA,GAAa,QAEbE,EAAiB9L,UAElB,CAAC3L,EAAUuF,IAId,IAAMmS,EACqB,IAAzBF,EAAc3X,OACZ,cAAC,GAAD,IAEA,eAAC+C,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAMC,WAAS,EAACzD,MAAI,EAApB,SACE,cAAC,GAAD,CAAQ8T,iBAAkBA,EAAkBnI,MAAOA,MAErD,eAACnI,EAAA,EAAD,CACEC,WAAS,EACTzD,MAAI,EACJ0M,UAAU,SACVhI,WAAW,UACXwQ,GAAI,IACJnX,GAAI,IANN,UAQE,cAAC,GAAD,CACEsQ,MAAOA,EACPuG,eAAgBA,EAChBC,YAAaA,EACbP,WAAYA,EACZC,UAAWA,EACXC,WAAYA,EACZC,MAAOA,IAET,cAAC,GAAD,CACEW,oBAAqBA,EACrBE,SAAUA,IAEZ,cAAC,GAAD,CAAcgC,qBAAsBA,IACpC,cAAC,GAAD,CAAQK,WAAYA,EAAYC,UAAWA,UAKnD,OACE,cAACW,GAAA,EAAD,CACEC,kBAAgB,uBAChBhT,KAAMA,EACNC,QAASqO,EACT2E,oBAAqBC,KACrBC,gBAAiB,CAAEjM,UAAW,KAAMkM,QAAS,KAC7CC,YAAa3W,EACb4W,cAAe5W,EAPjB,SASGgW,EAAY,cAAC,GAAD,IAAgBI,KCpFpBS,GAjCI,WACjB,IAAMnY,EAAWC,cAGXqB,EAAU4K,YAAc,qBACxB3K,EAAY2K,YAAc,sBAEhCpS,qBAAU,WACRkG,EAAS,CACPY,KAAM,aACNC,QAAS,CAAES,QAASA,EAASC,UAAWA,OAEzC,CAACD,EAASC,EAAWvB,IAExB,IAAMwX,EAAgB,cAAC,IAAD,CAAOja,KAAK,MAAM6a,QAAS,cAAC,GAAD,MAEjD,OACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAO7a,KAAK,IAAI6a,QAAS,cAAC,GAAD,IAAzB,WACI9W,GAAW,cAAC,IAAD,CAAO+W,OAAK,EAACD,QAAS,cAAC,GAAD,MACnC,cAAC,IAAD,CAAO7a,KAAK,UAAU6a,QAAS,cAAC,GAAD,IAA/B,SACGZ,IAEH,cAAC,IAAD,CAAOja,KAAK,UAAU6a,QAAS,cAAC,GAAD,IAA/B,SACGZ,IAEFlW,GAAW,cAAC,IAAD,CAAO/D,KAAK,QAAQ6a,QAAS,cAAC,GAAD,SAE3C,cAAC,IAAD,CAAO7a,KAAK,IAAI6a,QAAS,cAAC,GAAD,U,0DCnC/B,IAAME,GAAgB,CACpBC,IAAK,kBACLC,aACAC,UAAW,CAAC,kBAAmB,iBAmB3BC,GAAmBC,aAAeL,IC3BzB,SAAiBlY,EAAOwY,GACrC,OAAQA,EAAOhY,MACb,IAAK,iBACH,OAAO,6BACFR,GADL,IAEE8G,SAAS,GAAD,oBAAM9G,EAAM8G,UAAZ,CAAsB0R,EAAO/X,YAEzC,IAAK,oBAEH,OADAT,EAAM8G,SAAS2R,OAAOD,EAAO/X,QAAS,GAC/B,6BACFT,GADL,IAEE8G,SAAS,aAAK9G,EAAM8G,YAExB,IAAK,cACH,OAAO,6BACF9G,GADL,IAEE6N,eAAe,GAAD,oBAAM7N,EAAM6N,gBAAZ,CAA4B2K,EAAO/X,YAErD,IAAK,iBAEH,OADAT,EAAM6N,eAAe4K,OAAOD,EAAO/X,QAAS,GACrC,6BACFT,GADL,IAEE6N,eAAe,aAAK7N,EAAM6N,kBAE9B,IAAK,YACH,OAAO,6BACF7N,GADL,IAEE4L,gBAAiB4M,EAAO/X,UAE5B,IAAK,aACH,OAAO,6BACFT,GADL,IAEEqC,aAAcmW,EAAO/X,UAEzB,IAAK,aACH,OAAO,6BACFT,GADL,IAEEF,SAAU0Y,EAAO/X,UAErB,QACE,OAAOT,MDXA0Y,GAAQC,aAAYL,GAVZ,CACnBxR,SAAU,GACV+G,eAAgB,GAChBjC,iBAAiB,EACjBvJ,aAAc,GACdvC,UAAU,IAMC8Y,GAAYC,aAAaH,IEpBtCI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUN,MAAOA,GAAjB,SACE,cAAC,KAAD,CAAaO,QAAS,cAAC,GAAD,IAAaL,UAAWA,GAA9C,SACE,cAAC,IAAD,CAAeM,SAAS,kBAAxB,SACE,cAAC,GAAD,YAKR7J,SAAS8J,eAAe,W","file":"static/js/main.edf5ad64.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\n// Hook that returns the width of a given ref element\r\n\r\nexport function useParentSize(ref) {\r\n  const [parentSize, setWidth] = useState();\r\n\r\n  useEffect(() => {\r\n    const getSize = () => {\r\n      if (ref.current === null) {\r\n        return;\r\n      }\r\n      setWidth({\r\n        width: ref.current.clientWidth,\r\n        height: ref.current.clientHeight,\r\n      });\r\n    };\r\n    \r\n    getSize();\r\n    window.addEventListener(\"resize\", getSize);\r\n  }, [ref]);\r\n\r\n  return parentSize;\r\n}\r\n\r\nconst hooks = {\r\n  useParentSize,\r\n};\r\n\r\nexport default hooks;\r\n","import { createTheme, responsiveFontSizes } from \"@mui/material\";\r\n\r\nconst baseTheme = createTheme({\r\n  breakpoints: {\r\n    values: {\r\n      xs: 0,\r\n      sm: 700,\r\n      md: 900,\r\n      lg: 1200,\r\n      xl: 1536,\r\n    },\r\n  },\r\n  typography: {\r\n    button: {\r\n      textTransform: \"none\",\r\n    },\r\n  },\r\n  components: {\r\n    MuiButtonBase: {\r\n      defaultProps: {\r\n        disableRipple: true,\r\n        disableTouchRipple: true,\r\n      },\r\n    },\r\n    MuiIconButton: {\r\n      styleOverrides: {\r\n        root: {\r\n          \"&:hover\": {\r\n            backgroundColor: \"transparent\",\r\n          },\r\n        },\r\n      },\r\n    },\r\n    MuiSwitch: {\r\n      styleOverrides: {\r\n        switchBase: {\r\n          \"&:hover\": {\r\n            backgroundColor: \"transparent\",\r\n          },\r\n          \"&.Mui-checked:hover\": {\r\n            backgroundColor: \"transparent\",\r\n          },\r\n        },\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nconst lightTheme = createTheme(baseTheme, {\r\n  palette: {\r\n    primary: {\r\n      main: \"#7FD7C3\",\r\n    },\r\n    secondary: {\r\n      main: \"#FFFFFF\",\r\n    },\r\n    text: {\r\n      primary: \"#383A47\",\r\n      secondary: \"#C4C4C4\",\r\n    },\r\n    background: {\r\n      paper: \"#FAFAFA\",\r\n      default: \"#FAFAFA\",\r\n    },\r\n    divider: \"rgba(255, 255, 255, 0.3)\",\r\n  },\r\n  components: {\r\n    MuiFab: {\r\n      styleOverrides: {\r\n        root: {\r\n          \"&:hover\": {\r\n            backgroundColor: \"#FFFFFF\",\r\n          },\r\n        },\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nconst darkTheme = createTheme(baseTheme, {\r\n  palette: {\r\n    primary: {\r\n      main: \"#7FD7C3\",\r\n    },\r\n    secondary: {\r\n      main: \"#383A47\",\r\n    },\r\n    text: {\r\n      primary: \"#EFEFEF\",\r\n      secondary: \"#C4C4C4\",\r\n    },\r\n    background: {\r\n      paper: \"#4D4F61\",\r\n      default: \"#383A47\",\r\n    },\r\n    divider: \"rgba(0, 0, 0, 0.3)\",\r\n  },\r\n  components: {\r\n    MuiFab: {\r\n      styleOverrides: {\r\n        root: {\r\n          \"&:hover\": {\r\n            backgroundColor: \"#383A47\",\r\n          },\r\n        },\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nexport const responsiveLightTheme = responsiveFontSizes(lightTheme);\r\nexport const responsiveDarkTheme = responsiveFontSizes(darkTheme);\r\n\r\nconst themes = {\r\n  responsiveLightTheme,\r\n  responsiveDarkTheme,\r\n};\r\n\r\nexport default themes;\r\n","import { KitchenRounded, MenuBookRounded } from \"@mui/icons-material\";\r\nimport {\r\n  BottomNavigation,\r\n  BottomNavigationAction,\r\n  Paper,\r\n  styled,\r\n  Toolbar,\r\n} from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\n\r\nconst ActionButtons = () => {\r\n  const actionBtList = [\r\n    {\r\n      name: \"pantry\",\r\n      icon: <KitchenRounded sx={{ pr: 1, fontSize: 40 }} />,\r\n      link: \"/\",\r\n    },\r\n    {\r\n      name: \"recipes\",\r\n      icon: <MenuBookRounded sx={{ pr: 1, fontSize: 40 }} />,\r\n      link: \"/recipes\",\r\n    },\r\n  ];\r\n\r\n  // check if the current path matches any path in the action button list\r\n  const location = useLocation();\r\n  const path = location.pathname;\r\n  const actionButtons = actionBtList.map((button) => button.link).indexOf(path);\r\n\r\n  // manages the active sate of the action button group\r\n  const [showActionBt, setShowActionBt] = useState(true);\r\n  // manages the active state of individual action button\r\n  const [active, setActive] = useState(path);\r\n\r\n  useEffect(() => {\r\n    if (actionButtons === -1) {\r\n      return setShowActionBt(false);\r\n    }\r\n    setShowActionBt(true);\r\n    setActive(path);\r\n  }, [actionButtons, path]);\r\n\r\n  const handlePathChange = (e, value) => {\r\n    setActive(value);\r\n  }\r\n\r\n  const CustomBtNavAction = styled(BottomNavigationAction)(({ theme }) => ({\r\n    \"&.Mui-selected\": { borderTop: \"5px solid \" + theme.palette.primary.main },\r\n  }));\r\n\r\n  return (\r\n    <>\r\n      {showActionBt && (\r\n        <Box width=\"100%\">\r\n          <Toolbar />\r\n          <Paper\r\n            sx={{ position: \"fixed\", bottom: 0, left: 0, right: 0, zIndex: \"appBar\" }}\r\n            elevation={3}\r\n          >\r\n            <BottomNavigation\r\n              showLabels\r\n              value={active}\r\n              onChange={handlePathChange}\r\n              sx={{ backgroundColor: \"secondary.main\" }}\r\n            >\r\n              {actionBtList.map((item) => (\r\n                <CustomBtNavAction\r\n                  key={item.name}\r\n                  component={Link}\r\n                  to={item.link}\r\n                  value={item.link}\r\n                  label={item.name.toUpperCase()}\r\n                  icon={item.icon}\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"row\",\r\n                    minWidth: (100 / actionBtList.length).toString() + \"%\",\r\n                    borderTop: \"5px solid transparent\",\r\n                  }}\r\n                />\r\n              ))}\r\n            </BottomNavigation>\r\n          </Paper>\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ActionButtons;\r\n","import { DarkModeRounded, LightModeRounded } from \"@mui/icons-material\";\r\nimport { Switch } from \"@mui/material\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst ThemeButton = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  // Controls toggle of dark/light mode\r\n  const darkMode = useSelector((state) => state.darkMode);\r\n\r\n  const toggleMode = () => {\r\n    dispatch({\r\n      type: \"THEME_MODE\",\r\n      payload: !darkMode,\r\n    });\r\n  };\r\n\r\n  const iconOptions = {\r\n    fontSize: 30,\r\n    padding: 0.5,\r\n    marginTop: -0.7,\r\n    backgroundColor: \"secondary.main\",\r\n    borderRadius: \"50%\",\r\n    boxShadow:\r\n      \"0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)\",\r\n  };\r\n\r\n  return (\r\n    <Switch\r\n      checked={darkMode}\r\n      onChange={toggleMode}\r\n      aria-label=\"theme mode\"\r\n      color=\"secondary\"\r\n      checkedIcon={<DarkModeRounded color=\"primary\" sx={iconOptions} />}\r\n      icon={<LightModeRounded color=\"primary\" sx={iconOptions} />}\r\n      sx={{ paddingBottom: 1.5, paddingTop: 1.5, width: 70 }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ThemeButton;\r\n","import {\r\n  InfoRounded,\r\n  KitchenRounded,\r\n  MenuBookRounded,\r\n  StarRateRounded,\r\n} from \"@mui/icons-material\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemButton,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ThemeButton from \"../ThemeButton\";\r\n\r\nconst MainNavList = ({ desktop, desktopLg }) => {\r\n  const navList = [\r\n    {\r\n      name: \"My Pantry\",\r\n      icon: <KitchenRounded color=\"secondary\" />,\r\n      link: \"/\",\r\n      mobile: true,\r\n      desktop: false,\r\n    },\r\n    {\r\n      name: \"Recipes\",\r\n      icon: <MenuBookRounded color=\"secondary\" />,\r\n      link: \"recipes\",\r\n      mobile: true,\r\n      desktop: true,\r\n    },\r\n    {\r\n      name: \"Starred Recipes\",\r\n      icon: <StarRateRounded color=\"secondary\" />,\r\n      link: \"starred\",\r\n      mobile: true,\r\n      desktop: true,\r\n    },\r\n    {\r\n      name: \"About\",\r\n      icon: <InfoRounded color=\"secondary\" />,\r\n      link: \"about\",\r\n      mobile: false,\r\n      desktop: true,\r\n    },\r\n  ];\r\n\r\n  const filteredNavList = navList.filter((item) =>\r\n    desktop ? item.desktop === true : item.mobile === true\r\n  );\r\n\r\n  return (\r\n    <List dense={desktop && !desktopLg} sx={desktop && { display: \"flex\" }}>\r\n      {filteredNavList.map((item) => (\r\n        <ListItem\r\n          divider={!desktop}\r\n          disablePadding\r\n          key={item.name}\r\n          sx={desktop && { width: \"fit-content\" }}\r\n        >\r\n          <ListItemButton\r\n            component={Link}\r\n            to={item.link}\r\n            sx={{ width: \"100%\", paddingX: desktop && !desktopLg ? 1 : 2 }}\r\n          >\r\n            {item.icon === null ? null : (\r\n              <ListItemIcon sx={{ minWidth: 40 }}>{item.icon}</ListItemIcon>\r\n            )}\r\n            <ListItemText\r\n              primary={item.name}\r\n              primaryTypographyProps={{ color: \"secondary\", align: \"right\" }}\r\n            />\r\n          </ListItemButton>\r\n        </ListItem>\r\n      ))}\r\n      {desktop && (\r\n        <ListItem disablePadding sx={{ width: \"fit-content\", marginLeft: desktopLg ? 5 : 2.5 }}>\r\n          <ThemeButton />\r\n        </ListItem>\r\n      )}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default MainNavList;\r\n","export default __webpack_public_path__ + \"static/media/Logo.4e019f4f.svg\";","import { useSelector } from \"react-redux\";\r\nimport { CopyrightRounded, GitHub, LinkedIn } from \"@mui/icons-material\";\r\nimport { Grid, IconButton, Link, Typography } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport Logo from \"../../assets/Logo.svg\";\r\n\r\nconst About = () => {\r\n  const { desktop } = useSelector((state) => state.mediaqueries);\r\n\r\n  // Font and Icon colors change based on return value of the mediaquery\r\n  const fontColor = desktop ? \"text.primary\" : \"secondary.main\";\r\n  const iconColor = desktop ? \"primary\" : \"secondary\";\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      height=\"100%\"\r\n      width=\"fit-content\"\r\n      flexDirection=\"column\"\r\n      justifyContent=\"flex-end\"\r\n      m={2.5}\r\n      color={fontColor}\r\n    >\r\n      {!desktop && (\r\n        <Grid container flexDirection=\"column\">\r\n          <Box\r\n            component=\"img\"\r\n            height={35}\r\n            width={52}\r\n            src={Logo}\r\n            alt=\"whatsinmypantry smiling taco logo\"\r\n          />\r\n          <Typography variant=\"h5\" component=\"h2\" paddingY={1}>\r\n            about\r\n          </Typography>\r\n        </Grid>\r\n      )}\r\n      <Typography variant=\"body2\" component=\"p\" pb={1}>\r\n        #whatsinmypantry is a recipe management app meant to make your daily\r\n        life easier by helping you decide what to cook based on what you have at\r\n        home.\r\n      </Typography>\r\n      <Typography variant=\"body2\" component=\"p\">\r\n        This app was created as a FrontEnd project for an academic course and is\r\n        powered by{\" \"}\r\n        <Link\r\n          href=\"https://spoonacular.com/food-api\"\r\n          target=\"_blank\"\r\n          underline=\"none\"\r\n          color={iconColor}\r\n        >\r\n          Spoonacular API.\r\n        </Link>\r\n      </Typography>\r\n      <Box component=\"footer\" mt={4}>\r\n        <Grid container>\r\n          <IconButton\r\n            href=\"https://www.linkedin.com/in/brunodeilhot/\"\r\n            target=\"_blank\"\r\n          >\r\n            <LinkedIn color={iconColor} fontSize=\"large\" />\r\n          </IconButton>\r\n          <IconButton href=\"https://github.com/brunodeilhot\" target=\"_blank\">\r\n            <GitHub color={iconColor} sx={{ fontSize: 35 }} />\r\n          </IconButton>\r\n        </Grid>\r\n        <Typography\r\n          variant=\"body2\"\r\n          component=\"p\"\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n        >\r\n          #whatsinmypantry by Bruno Deilhot\r\n          <CopyrightRounded fontSize=\"small\" sx={{ marginX: 0.5 }} />\r\n          {new Date().getFullYear()}\r\n        </Typography>\r\n      </Box>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import { CloseRounded, MenuRounded } from \"@mui/icons-material\";\r\nimport { Drawer, Grid, IconButton } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport { useState } from \"react\";\r\nimport MainNavList from \"./MainNavList\";\r\nimport About from \"../../pages/about\";\r\nimport ThemeButton from \"../ThemeButton\";\r\n\r\nconst MainNavMobile = () => {\r\n  // State management and function that controls the open/close of the\r\n  // mobile menu drawer\r\n  const [navState, setNavState] = useState(false);\r\n\r\n  const toggleNav = () => {\r\n    setNavState(!navState);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <IconButton\r\n        onClick={toggleNav}\r\n        edge=\"end\"\r\n        color=\"primary\"\r\n        aria-label=\"menu\"\r\n      >\r\n        <MenuRounded sx={{ fontSize: 50 }} />\r\n      </IconButton>\r\n      <Drawer\r\n        anchor=\"right\"\r\n        open={navState}\r\n        onClose={toggleNav}\r\n        PaperProps={{\r\n          sx: { backgroundColor: \"primary.main\", maxWidth: \"70%\" },\r\n        }}\r\n      >\r\n        <Grid container justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Grid item ml={1}>\r\n            <ThemeButton />\r\n          </Grid>\r\n          <IconButton\r\n            onClick={toggleNav}\r\n            color=\"secondary\"\r\n            aria-label=\"close menu\"\r\n          >\r\n            <CloseRounded sx={{ fontSize: 50 }} />\r\n          </IconButton>\r\n        </Grid>\r\n        <Box component=\"nav\" role=\"navigation\" onClick={toggleNav}>\r\n          <MainNavList />\r\n        </Box>\r\n        <About />\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainNavMobile;\r\n","import { AppBar, Box, Toolbar, Typography } from \"@mui/material\";\r\nimport MainNavList from \"./MainNav/MainNavList\";\r\nimport MainNavMobile from \"./MainNav/MainNavMobile\";\r\n\r\nconst Header = ({ desktop, desktopLg }) => (\r\n  <>\r\n    <AppBar\r\n      sx={{ backgroundColor: desktop ? \"primary.main\" : \"background.default\" }}\r\n      elevation={!desktop ? 0 : 4}\r\n    >\r\n      <Toolbar>\r\n        <Typography\r\n          variant=\"h6\"\r\n          component=\"h1\"\r\n          color={desktop ? \"secondary\" : \"primary\"}\r\n          fontWeight={700}\r\n          flexGrow={1}\r\n        >\r\n          #whatsinmypantry\r\n        </Typography>\r\n        {desktop ? (\r\n          <Box component=\"nav\" role=\"navigation\">\r\n            <MainNavList desktop={desktop} desktopLg={desktopLg} />\r\n          </Box>\r\n        ) : (\r\n          <MainNavMobile />\r\n        )}\r\n      </Toolbar>\r\n    </AppBar>\r\n    <Toolbar id=\"back-to-top-anchor\" />\r\n  </>\r\n);\r\n\r\nexport default Header;\r\n","export default __webpack_public_path__ + \"static/media/SadLogo.42b7c2ef.svg\";","import { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Grid, Typography } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport SadLogo from \"../assets/SadLogo.svg\";\r\n\r\nconst ErrorPage = ({ apiLimit, desktop, drawerWidth }) => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  // error page displays for 5 seconds then redirects back to the home page\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      if (desktop) {\r\n        navigate(\"about\");\r\n      } else {\r\n        navigate(\"/\");\r\n      }\r\n      dispatch({ type: \"API_LIMIT\", payload: false });\r\n    }, 5000);\r\n    return () => clearTimeout(timer);\r\n  }, [desktop, dispatch, navigate]);\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      justifyContent=\"center\"\r\n      alignContent=\"center\"\r\n      width={desktop ? \"fit-content\" : \"100%\"}\r\n      ml={desktop ? drawerWidth : 0}\r\n    >\r\n      <Grid container item flexDirection=\"column\" alignItems=\"center\" p={2.5}>\r\n        <Box\r\n          component=\"img\"\r\n          width={170}\r\n          height={106}\r\n          mt={6}\r\n          mb={3}\r\n          src={SadLogo}\r\n          alt=\"Large whatsinmypantry smiling taco logo\"\r\n        />\r\n        <Typography component=\"p\" variant=\"h4\" color=\"text.primary\">\r\n          {apiLimit ? \"Api calls limit reached.\" : \"Page not found.\"}\r\n        </Typography>\r\n        {apiLimit && (\r\n          <Typography\r\n            component=\"p\"\r\n            variant=\"body1\"\r\n            color=\"text.secondary\"\r\n            pt={2.5}\r\n          >\r\n            This is an academic project with a limited amount of api calls per\r\n            day, please try again tomorrow.\r\n          </Typography>\r\n        )}\r\n        <Typography\r\n          component=\"p\"\r\n          variant=\"body1\"\r\n          color=\"text.secondary\"\r\n          pt={2.5}\r\n        >\r\n          You will be redirected in 5 seconds..\r\n        </Typography>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ErrorPage;\r\n","import { Grid, Typography } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport Logo from \"../../../assets/Logo.svg\";\r\n\r\nconst Intro = () => (\r\n  <Grid container flexDirection=\"column\" alignItems=\"center\">\r\n    <Box\r\n      component=\"img\"\r\n      width={170}\r\n      height={106}\r\n      mt={6}\r\n      mb={3}\r\n      src={Logo}\r\n      alt=\"Large whatsinmypantry smiling taco logo\"\r\n    />\r\n    <Typography variant=\"h3\" fontWeight={700} component=\"p\">\r\n      Let's begin!\r\n    </Typography>\r\n    <Typography variant=\"body1\" component=\"h2\" mb={4} align=\"center\">\r\n      Search for ingredients to fill your pantry.\r\n    </Typography>\r\n  </Grid>\r\n);\r\n\r\nexport default Intro;\r\n","import { KitchenRounded } from \"@mui/icons-material\";\r\nimport { Grid, Typography } from \"@mui/material\";\r\n\r\nconst EmptyPantry = () => (\r\n    <Grid container flexDirection=\"column\" alignItems=\"center\">\r\n      <KitchenRounded sx={{ fontSize: \"20vh\", color: \"text.secondary\", mt: \"5vh\" }} />\r\n      <Typography variant=\"h4\" component=\"p\" color=\"text.secondary\">\r\n        Your pantry is empty.\r\n      </Typography>\r\n    </Grid>\r\n  );\r\n\r\nexport default EmptyPantry;\r\n","import { HighlightOffRounded } from \"@mui/icons-material\";\r\nimport { Chip } from \"@mui/material\";\r\nimport { styled } from \"@mui/system\";\r\n\r\nconst IngredientChip = ({ ingredient, removeIngredient }) => {\r\n  const CustomChip = styled(Chip)(({ theme }) => ({\r\n    \"& .MuiChip-label\": {\r\n      color: theme.palette.text.primary,\r\n    },\r\n  }));\r\n\r\n  return (\r\n    <CustomChip\r\n      color=\"primary\"\r\n      variant=\"outlined\"\r\n      label={ingredient}\r\n      deleteIcon={<HighlightOffRounded />}\r\n      onDelete={(e) => removeIngredient(e, ingredient)}\r\n      sx={{ borderWidth: \"2px\", backgroundColor: \"secondary.main\" }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default IngredientChip;\r\n","import { Fade, Grid } from \"@mui/material\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { TransitionGroup } from \"react-transition-group\";\r\nimport EmptyPantry from \"./EmptyPantry\";\r\nimport IngredientChip from \"./IngredientChip\";\r\n\r\nconst MyPantry = () => {\r\n  const dispatch = useDispatch();\r\n  const ingredients = useSelector((state) => state.myPantry);\r\n\r\n  const removeIngredient = (e, ingredient) => {\r\n    const ingIndex = ingredients.indexOf(ingredient);\r\n    dispatch({ type: \"REMOVE_INGREDIENT\", payload: ingIndex });\r\n  };\r\n\r\n  const ingredientList = ingredients.map((ingredient) => (\r\n    <Fade key={ingredient}>\r\n      <Grid item>\r\n        <IngredientChip\r\n          ingredient={ingredient}\r\n          removeIngredient={removeIngredient}\r\n        />\r\n      </Grid>\r\n    </Fade>\r\n  ));\r\n\r\n  return (\r\n    <Grid container justifyContent=\"center\">\r\n      {ingredients.length === 0 ? (\r\n        <EmptyPantry />\r\n      ) : (\r\n        <Grid container item spacing={1} maxWidth=\"80%\" mt={3} mb={3}>\r\n          <TransitionGroup component={null}>{ingredientList}</TransitionGroup>\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default MyPantry;\r\n","import { SearchRounded } from \"@mui/icons-material\";\r\nimport { Grid, InputAdornment, TextField } from \"@mui/material\";\r\nimport { styled } from \"@mui/system\";\r\n\r\nconst SearchBar = ({ handleChange, value, searchBarRef }) => {\r\n  // Customized input field\r\n  const SearchIgredientsInput = styled(TextField)(({ theme }) => {\r\n    const themeColor = theme.palette.primary.main;\r\n    return {\r\n      \"& .MuiOutlinedInput-root\": {\r\n        \"& fieldset\": {\r\n          borderColor: themeColor,\r\n          borderWidth: \"2px\",\r\n          borderRadius: \"30px\",\r\n        },\r\n        \"&:hover fieldset\": {\r\n          borderColor: themeColor,\r\n        },\r\n        \"&.Mui-focused fieldset\": {\r\n          borderWidth: \"3px\",\r\n        },\r\n      },\r\n    };\r\n  });\r\n\r\n  return (\r\n    <Grid container justifyContent=\"center\">\r\n      <SearchIgredientsInput\r\n        ref={searchBarRef}\r\n        autoFocus\r\n        value={value}\r\n        onChange={handleChange}\r\n        placeholder=\"e.g. tomato\"\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n              <SearchRounded color=\"primary\" sx={{ fontSize: 40 }} />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n        sx={{\r\n          minWidth: \"80%\",\r\n          borderRadius: \"30px\",\r\n          backgroundColor: \"secondary.main\",\r\n        }}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","export const apiKey = {\r\n    apiKey: \"f1f0a35e77ce498c96d1a4925b53525a\",\r\n  };\r\n\r\nexport default apiKey;","import axios from \"axios\";\r\nimport apiKey from \"./apiKey\"\r\n\r\nconst baseURL = \"https://api.spoonacular.com\";\r\nexport const imageBaseURL = \"https://spoonacular.com/cdn/ingredients_100x100/\";\r\n\r\nconst api = axios.create({\r\n  baseURL,\r\n  headers: {\r\n    Accept: \"application/json\",\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\n// Search ingredient based on user input and return 5 results\r\nexport function searchIngredients(value, success) {\r\n  return api\r\n    .get(\"/food/ingredients/search\", {\r\n      params: {\r\n        ...apiKey,\r\n        query: value,\r\n        number: 5,\r\n      },\r\n    })\r\n    .catch((error) => apiLimit(error))\r\n    .then(parseJsonResults)\r\n    .then(success);\r\n}\r\n\r\n// Return a list of recipes based on ingredient values, number of recipes\r\n// and filter options\r\nexport function searchRecByIng(value, type, diet, number, success) {\r\n  const params = {\r\n    ...apiKey,\r\n    includeIngredients: value,\r\n    sort: \"min-missing-ingredients\",\r\n    sortDirection: \"asc\",\r\n    number: number,\r\n  };\r\n\r\n  const filteredParams = () => {\r\n    if (type !== undefined && diet !== undefined) {\r\n      return {\r\n        ...params,\r\n        type: type,\r\n        diet: diet,\r\n      };\r\n    } else if (type !== undefined) {\r\n      return {\r\n        ...params,\r\n        type: type,\r\n      };\r\n    } else if (diet !== undefined) {\r\n      return {\r\n        ...params,\r\n        diet: diet,\r\n      };\r\n    }\r\n    return { ...params };\r\n  };\r\n\r\n  return api\r\n    .get(\"/recipes/complexSearch\", {\r\n      params: filteredParams(),\r\n    })\r\n    .catch((error) => apiLimit(error))\r\n    .then(parseJsonResults)\r\n    .then(success);\r\n}\r\n\r\n// Return recipe details based on recipe id\r\nexport function getRecipeDetails(value, success) {\r\n  return api\r\n    .get(`/recipes/${value}/information`, {\r\n      params: {\r\n        ...apiKey,\r\n      },\r\n    })\r\n    .catch((error) => apiLimit(error))\r\n    .then(parseJsonData)\r\n    .then(success);\r\n}\r\n\r\nfunction parseJsonResults(response) {\r\n  if (response === 402) {\r\n    return response;\r\n  }\r\n  return response.data.results;\r\n}\r\n\r\n// If an none existant id is received as user value then response is still\r\n// returned as undefined and an error page is displayed\r\nfunction parseJsonData(response) {\r\n  if (response === undefined || response === 402) {\r\n    return response;\r\n  }\r\n  return response.data;\r\n}\r\n\r\n// 402 error is used by the API to inform that api call limit has been reached\r\nfunction apiLimit(error) {\r\n  return error.response.status;\r\n}\r\n\r\nconst methods = {\r\n  imageBaseURL,\r\n  searchIngredients,\r\n  searchRecByIng,\r\n  getRecipeDetails,\r\n};\r\n\r\nexport default methods;\r\n","import {\r\n  AddCircleOutlineRounded,\r\n  CheckCircleRounded,\r\n} from \"@mui/icons-material\";\r\nimport {\r\n  Avatar,\r\n  ClickAwayListener,\r\n  Grid,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n} from \"@mui/material\";\r\nimport { imageBaseURL } from \"../../../../services\";\r\nimport { useParentSize } from \"../../../../Utils\";\r\n\r\nconst SearchResults = ({\r\n  ingredients,\r\n  ingredientToggle,\r\n  resetValue,\r\n  pantry,\r\n  widthRef,\r\n}) => {\r\n  // Calls custom hook to calculate the width of the referenced element,\r\n  // which in this case is the search bar component\r\n  const searchBar = useParentSize(widthRef);\r\n  const searchBarWidth = searchBar === undefined ? 0 : searchBar.width;\r\n\r\n  return (\r\n    <Grid container justifyContent=\"center\">\r\n      <ClickAwayListener onClickAway={resetValue}>\r\n        <List\r\n          dense\r\n          sx={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            position: \"absolute\",\r\n            width: searchBarWidth,\r\n            border: \"3px solid\",\r\n            borderColor: \"primary.main\",\r\n            borderRadius: \"30px\",\r\n            backgroundColor: \"secondary.main\",\r\n            mt: 1,\r\n            zIndex: \"speedDial\",\r\n          }}\r\n        >\r\n          {ingredients.map((ingredient) => (\r\n            <ListItem key={ingredient.id} disablePadding sx={{ paddingX: 2 }}>\r\n              <ListItemAvatar sx={{ minWidth: \"20px\" }}>\r\n                <Avatar\r\n                  src={imageBaseURL + ingredient.image}\r\n                  sx={{ maxWidth: 20, maxHeight: 20 }}\r\n                />\r\n              </ListItemAvatar>\r\n              <ListItemText\r\n                primary={ingredient.name}\r\n                sx={{ textAlign: \"center\", color: \"text.primary\" }}\r\n              />\r\n              <IconButton\r\n                onClick={(e) => ingredientToggle(e, ingredient.name)}\r\n                sx={{ p: 0, minWidth: \"20px\" }}\r\n              >\r\n                {pantry.indexOf(ingredient.name) === -1 ? (\r\n                  <AddCircleOutlineRounded color=\"primary\" />\r\n                ) : (\r\n                  <CheckCircleRounded color=\"primary\" />\r\n                )}\r\n              </IconButton>\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </ClickAwayListener>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default SearchResults;\r\n","import SearchBar from \"./SearchBar\";\r\nimport SearchResults from \"./SearchResults\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { searchIngredients } from \"../../../../services\";\r\nimport { useDebounce } from \"use-debounce/lib\";\r\nimport { Box } from \"@mui/material\";\r\n\r\nconst SearchIngredients = () => {\r\n  const dispatch = useDispatch();\r\n  const searchBarRef = useRef();\r\n\r\n  // State and functions that manage the values received on the search input\r\n  // The debounced value is used to fetch a list of ingredients\r\n  // Ingredient's fetched state is then forwarded to the search results component\r\n  // When ingredient is added it is dispatched to the redux store\r\n\r\n  // States that manage the user input of the ingredient search bar\r\n  const [value, setValue] = useState(\"\");\r\n  const [debouncedValue] = useDebounce(value, 500);\r\n\r\n  const handleChange = (e) => setValue(e.target.value);\r\n\r\n  // State that manages the list of ingredients obtained from the api\r\n  const [ingredientResults, setIngredientResults] = useState([]);\r\n\r\n  // When debounced value of the input changes, a list of resuslts is\r\n  // called from the api, if the response is 402 then api limit was\r\n  // reached and an error page is displayed\r\n  useEffect(() => {\r\n    if (debouncedValue.length >= 3) {\r\n      searchIngredients(debouncedValue, (searchResults) => {\r\n        if (searchResults === 402) {\r\n          return dispatch({ type: \"API_LIMIT\", payload: true });\r\n        }\r\n        setIngredientResults(searchResults);\r\n      });\r\n    }\r\n\r\n    setIngredientResults([]);\r\n  }, [debouncedValue, dispatch]);\r\n\r\n  // This function is called on the search results when the user adds or removes\r\n  // an ingredient and then updates the global store myPantry\r\n  const pantry = useSelector((state) => state.myPantry);\r\n\r\n  const ingredientToggle = (e, ingredient) => {\r\n    const ingredientIndex = pantry.indexOf(ingredient);\r\n\r\n    if (ingredientIndex !== -1) {\r\n      return dispatch({ type: \"REMOVE_INGREDIENT\", payload: ingredientIndex });\r\n    }\r\n    dispatch({ type: \"ADD_INGREDIENT\", payload: ingredient });\r\n  }\r\n\r\n  const resetValue = () => {\r\n    setValue(\"\");\r\n  }\r\n\r\n  return (\r\n    <Box position=\"relative\">\r\n      <SearchBar\r\n        searchBarRef={searchBarRef}\r\n        value={value}\r\n        handleChange={handleChange}\r\n      />\r\n      {ingredientResults.length > 0 ? (\r\n        <SearchResults\r\n          widthRef={searchBarRef}\r\n          ingredients={ingredientResults}\r\n          ingredientToggle={ingredientToggle}\r\n          resetValue={resetValue}\r\n          pantry={pantry}\r\n        />\r\n      ) : null}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SearchIngredients;\r\n","import { Grid } from \"@mui/material\";\r\nimport Intro from \"./components/Intro\";\r\nimport MyPantry from \"./components/MyPantry\";\r\nimport SearchIngredients from \"./components/SearchIngredients\";\r\n\r\nconst Home = () => (\r\n  <Grid container item direction=\"column\" >\r\n    <Intro />\r\n    <SearchIngredients />\r\n    <MyPantry />\r\n  </Grid>\r\n);\r\n\r\nexport default Home;\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { Outlet, useNavigate, useMatch } from \"react-router\";\r\nimport { useParentSize } from \"./Utils\";\r\nimport { CssBaseline, Drawer, Grid, ThemeProvider, Toolbar, useMediaQuery } from \"@mui/material\";\r\nimport { Box, styled } from \"@mui/system\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport { responsiveDarkTheme, responsiveLightTheme } from \"./Theme\";\r\nimport ActionButtons from \"./components/ActionButtons\";\r\nimport Header from \"./components/Header\";\r\nimport ErrorPage from \"./components/ErrorPage\";\r\nimport Home from \"./pages/home\";\r\n\r\nconst App = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const apiLimit = useSelector((state) => state.apiLimitReached);\r\n  const { desktop, desktopLg } = useSelector((state) => state.mediaqueries);\r\n  const darkMode = useSelector((state) => state.darkMode);\r\n\r\n  // Checks the user default mode on system or browser settings\r\n  // Saves that setting in the store\r\n  const preferedMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: \"THEME_MODE\", payload: preferedMode });\r\n  }, [dispatch, preferedMode]); \r\n\r\n  // Home page (ingredient search) is only present as a standalone\r\n  // in the mobile version, for desktop the user is redirected to\r\n  // the recipes page\r\n  const matchRoute = useMatch(\"/\");\r\n\r\n  useEffect(() => {\r\n    if (desktop && matchRoute) {\r\n      navigate(\"recipes\");\r\n    }\r\n  }, [desktop, matchRoute, navigate]);\r\n\r\n  // For the desktop version the home page is presented as a permanent\r\n  // left positioned drawer and its width is rendered dynamically\r\n  // based on the referenced width of the body\r\n  const bodyRef = useRef();\r\n  const body = useParentSize(bodyRef);\r\n  const bodyWidth = body === undefined ? 0 : body.width;\r\n\r\n  const drawerWidth = desktopLg\r\n    ? (bodyWidth * 0.3).toString() + \"px\"\r\n    : (bodyWidth * 0.4).toString() + \"px\";\r\n\r\n  const PermanentDrawer = styled(Drawer)(({ theme }) => ({\r\n    \"& .MuiDrawer-docked\": {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n    \"& .MuiDrawer-paper\": {\r\n      width: drawerWidth,\r\n      boxSizing: \"border-box\",\r\n      zIndex: 1050,\r\n      backgroundColor: theme.palette.background.default,\r\n      borderRight: \"none\"\r\n    },\r\n  }));\r\n\r\n  const outlet = desktop ? (\r\n    <Box ml={drawerWidth}>\r\n      <Outlet />\r\n    </Box>\r\n  ) : (\r\n    <Outlet />\r\n  );\r\n\r\n  return (\r\n    <ThemeProvider\r\n      theme={darkMode ? responsiveDarkTheme : responsiveLightTheme}\r\n    >\r\n      <CssBaseline />\r\n      <Box ref={bodyRef} minHeight=\"100vh\" backgroundColor=\"background.default\">\r\n        <Header desktop={desktop} desktopLg={desktopLg} />\r\n        {desktop && (\r\n          <PermanentDrawer variant=\"permanent\">\r\n            <Toolbar />\r\n            <Grid container overflow=\"auto\" height=\"100vh\">\r\n              <Home />\r\n            </Grid>\r\n          </PermanentDrawer>\r\n        )}\r\n        {apiLimit ? (\r\n          <ErrorPage\r\n            apiLimit={apiLimit}\r\n            desktop={desktop}\r\n            drawerWidth={drawerWidth}\r\n          />\r\n        ) : (\r\n          outlet\r\n        )}\r\n        {!desktop && <ActionButtons />}\r\n      </Box>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { MenuBookRounded, StarRateRounded } from \"@mui/icons-material\";\r\nimport { Grid, Typography } from \"@mui/material\";\r\n\r\nconst NoRecipes = ({ starred, filtered }) => {\r\n  const iconOptions = { fontSize: \"20vh\", color: \"text.secondary\", mb: 1 };\r\n\r\n  const message = filtered\r\n    ? \"Try changing your filter options.\"\r\n    : \"Add some ingredients to your pantry.\";\r\n\r\n  return (\r\n    <Grid container justifyContent=\"center\" alignContent=\"center\">\r\n      <Grid container flexDirection=\"column\" alignItems=\"center\" mt=\"25vh\">\r\n        {starred ? (\r\n          <StarRateRounded sx={iconOptions} />\r\n        ) : (\r\n          <MenuBookRounded sx={iconOptions} />\r\n        )}\r\n        <Typography component=\"p\" variant=\"h4\" color=\"text.secondary\">\r\n          No recipes found.\r\n        </Typography>\r\n        <Typography component=\"p\" variant=\"body1\" color=\"text.secondary\">\r\n          {starred ? \"Star your favorite recipes.\" : message}\r\n        </Typography>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default NoRecipes;\r\n","import { WarningAmberRounded } from \"@mui/icons-material\";\r\nimport { IconButton, Tooltip } from \"@mui/material\";\r\n\r\nconst MissingIngWarning = ({ missingIng }) => {\r\n  const toolTip = `You are missing ${missingIng} ingredient${\r\n    missingIng === 1 ? \".\" : \"s.\"\r\n  }`;\r\n\r\n  return (\r\n    <Tooltip title={toolTip} enterDelay={300} leaveDelay={200} enterTouchDelay={0} > \r\n      <IconButton sx={{ alignSelf: \"flex-end\" }}>\r\n        <WarningAmberRounded color=\"warning\" />\r\n      </IconButton>\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport default MissingIngWarning;\r\n","import { StarRateRounded } from \"@mui/icons-material\";\r\nimport {\r\n  Card,\r\n  CardActionArea,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  IconButton,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MissingIngWarning from \"./MissingIng\";\r\n\r\nconst RecipeCard = ({\r\n  id,\r\n  title,\r\n  image,\r\n  missingIng,\r\n  toggleStarred,\r\n  starredRecipes,\r\n}) => {\r\n  // Defines the position of the recipe card icons\r\n  const iconPosition =\r\n    missingIng === undefined || 0 ? \"flex-end\" : \"space-between\";\r\n\r\n  // Data that is stored when a recipe is starred\r\n  const starredData = {\r\n    id: id,\r\n    title: title,\r\n    image: image,\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      sx={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        minHeight: \"100%\",\r\n        borderRadius: \"22px\",\r\n        backgroundColor: \"background.paper\",\r\n        boxShadow: \"0px 3px 5px 2px rgba(0, 0, 0, 0.03)\",\r\n      }}\r\n    >\r\n      <CardActionArea\r\n        component={Link}\r\n        to={`${id}`}\r\n        sx={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          justifyContent: \"start\",\r\n          flexGrow: 1,\r\n        }}\r\n      >\r\n        <CardMedia component=\"img\" image={image} alt={title} />\r\n        <CardContent sx={{ p: 1, pb: 0 }}>\r\n          <Typography component=\"h2\" variant=\"body2\" fontWeight={700}>\r\n            {title}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions\r\n        sx={{\r\n          display: \"flex\",\r\n          justifyContent: iconPosition,\r\n          p: 0,\r\n        }}\r\n      >\r\n        {missingIng === undefined || 0 ? null : (\r\n          <MissingIngWarning missingIng={missingIng} />\r\n        )}\r\n        <IconButton\r\n          onClick={(e) => toggleStarred(e, starredData)}\r\n          sx={{ alignSelf: \"flex-end\" }}\r\n        >\r\n          {starredRecipes.findIndex((recipe) => recipe.id === id) === -1 ? (\r\n            <StarRateRounded />\r\n          ) : (\r\n            <StarRateRounded sx={{ color: \"#F6E258\" }} />\r\n          )}\r\n        </IconButton>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default RecipeCard;\r\n","import { CircularProgress, Grid } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\n\r\nconst Loading = () => (\r\n  <Grid container justifyContent=\"center\">\r\n    <Box m=\"25vh\">\r\n      <CircularProgress size={100} color=\"primary\" />\r\n    </Box>\r\n  </Grid>\r\n);\r\n\r\nexport default Loading;\r\n","import { KeyboardArrowUpRounded } from \"@mui/icons-material\";\r\nimport { Fab, styled, useScrollTrigger, Zoom } from \"@mui/material\";\r\n\r\nconst ScrollTop = ({ desktop }) => {\r\n  const trigger = useScrollTrigger({\r\n    disableHysteresis: true,\r\n  });\r\n\r\n  const handleClick = (event) => {\r\n    const anchor = (event.target.ownerDocument || document).querySelector(\r\n      \"#back-to-top-anchor\"\r\n    );\r\n\r\n    if (anchor) {\r\n      anchor.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"center\",\r\n      });\r\n    }\r\n  };\r\n\r\n  // Customized scroll to top button\r\n  const ScrollTopFab = styled(Fab)(({ theme }) => ({\r\n    \"&.MuiFab-root\": {\r\n      \"&:hover\": {\r\n        backgroundColor: theme.palette.primary.main,\r\n      },\r\n    },\r\n  }));\r\n\r\n  return (\r\n    <Zoom in={trigger}>\r\n      <ScrollTopFab\r\n        onClick={handleClick}\r\n        color=\"primary\"\r\n        aria-label=\"scroll back to top\"\r\n        sx={{ position: \"fixed\", bottom: desktop ? 16 : 70, right: 16 }}\r\n      >\r\n        <KeyboardArrowUpRounded color=\"secondary\" sx={{ fontSize: 40 }} />\r\n      </ScrollTopFab>\r\n    </Zoom>\r\n  );\r\n};\r\n\r\nexport default ScrollTop;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { Grid } from \"@mui/material\";\r\nimport RecipeCard from \"./RecipeCard\";\r\nimport Loading from \"../../../../components/Loading\";\r\nimport ScrollTop from \"../../../../components/ScrollTop\";\r\n\r\nconst RecipeList = ({ recipes, desktop }) => {\r\n  const dispatch = useDispatch();\r\n  const starredRecipes = useSelector((state) => state.starredRecipes);\r\n\r\n  // Function that controls when a user adds or removes a starred recipe\r\n  // Starred recipes ids are stored globally and in local storage\r\n  const toggleStarred = (e, starred) => {\r\n    const checkIndex = starredRecipes.findIndex(\r\n      (recipe) => recipe.id === starred.id\r\n    );\r\n\r\n    if (checkIndex !== -1) {\r\n      return dispatch({ type: \"REMOVE_STARRED\", payload: checkIndex });\r\n    }\r\n    dispatch({ type: \"ADD_STARRED\", payload: starred });\r\n  };\r\n\r\n  const recipeList = recipes.map((recipe) => (\r\n    <Grid key={recipe.id} container item xs={2} md={3} lg={4} xl={5}>\r\n      <RecipeCard\r\n        id={recipe.id}\r\n        title={recipe.title}\r\n        image={recipe.image}\r\n        missingIng={recipe.missedIngredientCount}\r\n        toggleStarred={toggleStarred}\r\n        starredRecipes={starredRecipes}\r\n      />\r\n    </Grid>\r\n  ));\r\n\r\n  return (\r\n    <>\r\n      {recipeList.length === 0 ? (\r\n        <Loading />\r\n      ) : (\r\n        <Grid\r\n          container\r\n          columns={{ xs: 4, md: 9, lg: 16, xl: 25 }}\r\n          spacing={2}\r\n          p={2}\r\n        >\r\n          {recipeList}\r\n          <ScrollTop desktop={desktop} />\r\n        </Grid>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RecipeList;\r\n","import {\r\n  Box,\r\n  styled,\r\n  ToggleButton,\r\n  ToggleButtonGroup,\r\n  Typography,\r\n} from \"@mui/material\";\r\n\r\nconst FilterGroups = ({ filterBy, handleFilterChange }) => {\r\n  // Customized filter button group\r\n  const ToggleBtGroup = styled(ToggleButtonGroup)({\r\n    \"&.MuiToggleButtonGroup-root\": {\r\n      display: \"flex\",\r\n      flexFlow: \"row wrap\",\r\n      marginTop: \"15px\",\r\n      marginBottom: \"20px\",\r\n    },\r\n    \"& .MuiToggleButtonGroup-grouped:not(:last-of-type)\": {\r\n      border: \"1px solid\",\r\n      borderRadius: \"30px\",\r\n    },\r\n    \"& .MuiToggleButtonGroup-grouped:not(:first-of-type)\": {\r\n      border: \"1px solid\",\r\n      borderRadius: \"30px\",\r\n    },\r\n  });\r\n\r\n  // Customized filter button\r\n  const ToggleBt = styled(ToggleButton)(({ theme }) => ({\r\n    \"&.MuiToggleButton-root\": {\r\n      padding: \"0px 10px\",\r\n      marginRight: \"5px\",\r\n      marginTop: \"5px\",\r\n      \"&:hover\": {\r\n        backgroundColor: \"rgba(127, 215, 195, 0.1);\",\r\n      },\r\n      \"&.Mui-selected\": {\r\n        backgroundColor: `${theme.palette.primary.main}`,\r\n        border: \"1px solid transparent\",\r\n        \"&:hover\": {\r\n          backgroundColor: \"rgba(127, 215, 195, 0.8);\",\r\n        },\r\n      },\r\n    },\r\n  }));\r\n\r\n  // Generates a group of filters based on the given filter name and\r\n  // for each listed filter a button is created which passes its name(value)\r\n  // to the function in the main Recipes component\r\n  return (\r\n    <>\r\n      {filterBy.map((type) => {\r\n        return (\r\n          <Box\r\n            key={type.name}\r\n            borderTop=\"2px solid\"\r\n            borderColor=\"primary.main\"\r\n            position=\"relative\"\r\n          >\r\n            <Typography\r\n              variant=\"body2\"\r\n              component=\"h2\"\r\n              color=\"primary\"\r\n              pr={1}\r\n              bgcolor=\"background.default\"\r\n              position=\"absolute\"\r\n              top=\"-10px\"\r\n            >\r\n              {type.name.toUpperCase()}\r\n            </Typography>\r\n            <ToggleBtGroup\r\n              value={type.activeFilter}\r\n              exclusive\r\n              onChange={(e) => handleFilterChange(e, type.name)}\r\n              color=\"secondary\"\r\n            >\r\n              {type.filters.map((item) => (\r\n                <ToggleBt\r\n                  key={item}\r\n                  value={item}\r\n                  sx={{ color: \"primary.main\" }}\r\n                >\r\n                  {item}\r\n                </ToggleBt>\r\n              ))}\r\n            </ToggleBtGroup>\r\n          </Box>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FilterGroups;\r\n","import { FilterListOffRounded, FilterListRounded } from \"@mui/icons-material\";\r\nimport {\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  styled,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport FilterGroups from \"./FilterGroups\";\r\n\r\nconst Filters = ({ handleFilterChange, mealType, diet }) => {\r\n  // const that determines wether there are active filters\r\n  const noFilters = mealType === undefined && diet === undefined ? true : false;\r\n\r\n  const filterBy = [\r\n    {\r\n      name: \"meal type\",\r\n      activeFilter: mealType,\r\n      filters: [\r\n        \"main course\",\r\n        \"breakfast\",\r\n        \"soup\",\r\n        \"salad\",\r\n        \"dessert\",\r\n        \"drink\",\r\n        \"side dish\",\r\n      ],\r\n    },\r\n    {\r\n      name: \"dietary options\",\r\n      activeFilter: diet,\r\n      filters: [\r\n        \"gluten free\",\r\n        \"ketogenic\",\r\n        \"vegetarian\",\r\n        \"vegan\",\r\n        \"pescetarian\",\r\n        \"paleo\",\r\n      ],\r\n    },\r\n  ];\r\n\r\n  // Customized Filters accordion Open/Close icon\r\n  const AccordionIcon = styled(AccordionSummary)(({ theme }) => {\r\n    const filterColors = noFilters\r\n      ? theme.palette.text.secondary\r\n      : theme.palette.primary.main;\r\n    return {\r\n      \"&.MuiAccordionSummary-root\": {\r\n        flexDirection: \"row-reverse\",\r\n        marginTop: \"10px\",\r\n        width: \"fit-content\",\r\n      },\r\n      \"& .MuiAccordionSummary-content\": {\r\n        paddingLeft: \"10px\",\r\n      },\r\n      \"& .MuiAccordionSummary-expandIconWrapper\": {\r\n        padding: \"0px 10px\",\r\n        color: `${filterColors}`,\r\n        border: `2px solid ${filterColors}`,\r\n        borderRadius: \"10px\",\r\n        \"&.Mui-expanded\": {\r\n          transform: \"none\",\r\n          color: `${theme.palette.secondary.main}`,\r\n          backgroundColor: `${filterColors}`,\r\n        },\r\n      },\r\n    };\r\n  });\r\n\r\n  return (\r\n    <Accordion\r\n      square\r\n      disableGutters\r\n      sx={{ boxShadow: \"none\", backgroundColor: \"background.default\" }}\r\n    >\r\n      <AccordionIcon\r\n        expandIcon={\r\n          noFilters ? <FilterListOffRounded /> : <FilterListRounded />\r\n        }\r\n      >\r\n        {noFilters ? (\r\n          <Typography sx={{ color: \"text.secondary\" }}>\r\n            no filtered results\r\n          </Typography>\r\n        ) : (\r\n          <Typography color=\"primary\">showing filtered results</Typography>\r\n        )}\r\n      </AccordionIcon>\r\n      <AccordionDetails>\r\n        <FilterGroups\r\n          filterBy={filterBy}\r\n          handleFilterChange={handleFilterChange}\r\n        />\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default Filters;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Outlet } from \"react-router\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport { searchRecByIng } from \"../../services\";\r\nimport NoRecipes from \"./components/NoRecipes\";\r\nimport RecipeList from \"./components/RecipeList\";\r\nimport Filters from \"./components/Filters\";\r\n\r\nconst Recipes = () => {\r\n  const dispatch = useDispatch();\r\n  const { desktop } = useSelector((state) => state.mediaqueries);\r\n  const pantryState = useSelector((state) => state.myPantry);\r\n\r\n  // Management of filter options in the recipe list\r\n  const [mealType, setMealType] = useState();\r\n  const [diet, setDiet] = useState();\r\n\r\n  const handleFilterChange = (e, option) => {\r\n    if (option === \"meal type\") {\r\n      return mealType === e.target.value\r\n        ? setMealType(undefined)\r\n        : setMealType(e.target.value);\r\n    } else if (option === \"dietary options\") {\r\n      return diet === e.target.value\r\n        ? setDiet(undefined)\r\n        : setDiet(e.target.value);\r\n    }\r\n  };\r\n\r\n  // Management of recipe list limit, recipes are loaded by scrolling\r\n  // in blocks of 20 up to a maximum of 100\r\n  const [totalRecipes, setTotalRecipes] = useState(20);\r\n  const [recipeLimit, setRecipeLimit] = useState(false);\r\n\r\n  const addRecipesScroll = () => {\r\n    if (totalRecipes === 100 || recipeLimit === true) {\r\n      return;\r\n    }\r\n    setTotalRecipes(totalRecipes + 20);\r\n  };\r\n\r\n  // - Api is called for a new list of recipes based on state changes\r\n  // in the pantry(ingredient list), number of total recipes to be\r\n  // loaded(scrolling the page), or changes in the filters\r\n  // - If the number of results is less then the total recipes to be\r\n  // loaded then recipe limit is set to true\r\n\r\n  const [recipes, setRecipes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (pantryState.length > 0) {\r\n      searchRecByIng(\r\n        pantryState.toString(),\r\n        mealType,\r\n        diet,\r\n        totalRecipes.toString(),\r\n        (searchResults) => {\r\n          if (searchResults === 402) {\r\n            return dispatch({ type: \"API_LIMIT\", payload: true });\r\n          }\r\n          if (searchResults.length % 20 !== 0) {\r\n            setRecipeLimit(true);\r\n          }\r\n          if (searchResults.length % 20 === 0) {\r\n            setRecipeLimit(false);\r\n          }\r\n          dispatch({ type: \"API_LIMIT\", payload: false });\r\n          setRecipes(searchResults);\r\n        }\r\n      );\r\n    }\r\n  }, [pantryState, totalRecipes, dispatch, mealType, diet]);\r\n\r\n  // If the filters chosen by the user returns no results then\r\n  // a message is shown that there are no recipes available\r\n  const filteredRecipes =\r\n    recipes.length === 0 && (mealType !== undefined || diet !== undefined) ? (\r\n      <NoRecipes filtered={true} />\r\n    ) : (\r\n      <InfiniteScroll\r\n        dataLength={recipes}\r\n        next={addRecipesScroll}\r\n        hasMore={!recipeLimit}\r\n      >\r\n        <RecipeList recipes={recipes} desktop={desktop} />\r\n      </InfiniteScroll>\r\n    );\r\n\r\n  return (\r\n    <>\r\n      {pantryState.length === 0 ? (\r\n        <NoRecipes />\r\n      ) : (\r\n        <>\r\n          <Filters\r\n            handleFilterChange={handleFilterChange}\r\n            mealType={mealType}\r\n            diet={diet}\r\n          />\r\n          {filteredRecipes}\r\n        </>\r\n      )}\r\n      <Outlet />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Recipes;\r\n","import { useSelector } from \"react-redux\";\r\nimport { Outlet } from \"react-router\";\r\nimport NoRecipes from \"../recipes/components/NoRecipes\";\r\nimport RecipeList from \"../recipes/components/RecipeList\";\r\n\r\nconst Starred = () => {\r\n  const starredRecipes = useSelector((state) => state.starredRecipes);\r\n\r\n  return (\r\n    <>\r\n      {starredRecipes.length === 0 ? (\r\n        <NoRecipes starred={true} />\r\n      ) : (\r\n        <RecipeList recipes={starredRecipes} />\r\n      )}\r\n      <Outlet />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Starred;\r\n","import { CloseRounded } from \"@mui/icons-material\";\r\nimport { Fab, Grid } from \"@mui/material\";\r\n\r\nconst Header = ({ handleTransition, image }) => (\r\n  <Grid\r\n    container\r\n    item\r\n    justifyContent=\"flex-end\"\r\n    alignItems=\"flex-start\"\r\n    minHeight=\"30vh\"\r\n    bgcolor=\"text.secondary\"\r\n    borderBottom=\"5px solid\"\r\n    borderColor=\"primary.main\"\r\n    sx={{\r\n      background: `url(${image}) no-repeat`,\r\n      backgroundSize: \"cover\",\r\n      backgroundPosition: \"center\",\r\n    }}\r\n  >\r\n    <Fab\r\n      aria-label=\"close\"\r\n      color=\"primary\"\r\n      onClick={handleTransition}\r\n      sx={{ backgroundColor: \"secondary.main\", mr: 2, mt: 3, p: 0.5 }}\r\n    >\r\n      <CloseRounded color=\"primary\" sx={{ fontSize: 40 }} />\r\n    </Fab>\r\n  </Grid>\r\n);\r\n\r\nexport default Header;\r\n","import { Avatar, Grid, Tooltip } from \"@mui/material\";\r\n\r\nconst DietIcons = ({ glutenFree, dairyFree, vegetarian, vegan }) => {\r\n  const icons = [\r\n    { name: \"GF\", alt: \"Gluten Free\", prop: glutenFree },\r\n    { name: \"DF\", alt: \"Dairy Free\", prop: dairyFree },\r\n    { name: \"V\", alt: \"Vegetarian\", prop: vegetarian },\r\n    { name: \"VE\", alt: \"Vegan\", prop: vegan },\r\n  ];\r\n\r\n  const iconStyle = {\r\n    border: \"2px solid\",\r\n    borderColor: \"text.secondary\",\r\n    backgroundColor: \"transparent\",\r\n    color: \"text.secondary\",\r\n    fontWeight: 700,\r\n    fontSize: 12,\r\n    width: 28,\r\n    height: 28,\r\n  };\r\n\r\n  return (\r\n    <Grid container item spacing={1}>\r\n      {icons.map((item) => (\r\n        <Grid key={item.name} item>\r\n          <Tooltip title={item.alt} enterDelay={300} leaveDelay={200} enterTouchDelay={0}>\r\n            <Avatar\r\n              alt={item.alt}\r\n              sx={\r\n                item.prop\r\n                  ? {\r\n                      ...iconStyle,\r\n                      borderColor: \"primary.main\",\r\n                      color: \"primary.main\",\r\n                    }\r\n                  : iconStyle\r\n              }\r\n            >\r\n              {item.name}\r\n            </Avatar>\r\n          </Tooltip>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default DietIcons;\r\n","import { AccessTimeRounded, FavoriteBorderRounded } from \"@mui/icons-material\";\r\nimport { Grid, Typography } from \"@mui/material\";\r\n\r\nconst Info = ({ readyInMinutes, healthScore }) => {\r\n  const items = [\r\n    {\r\n      id: 1,\r\n      text: `${readyInMinutes} MINUTES`,\r\n      color: \"primary.main\",\r\n      icon: <AccessTimeRounded fontSize=\"large\" color=\"primary\" />,\r\n    },\r\n    {\r\n      id: 2,\r\n      text: `HEALTH SCORE ${healthScore}`,\r\n      color: \"#E06E9C\",\r\n      icon: (\r\n        <FavoriteBorderRounded fontSize=\"large\" sx={{ color: \"#E06E9C\" }} />\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Grid container item justifyContent=\"space-between\">\r\n      {items.map((item) => (\r\n        <Grid\r\n          key={item.id}\r\n          container\r\n          item\r\n          alignItems=\"center\"\r\n          wrap=\"nowrap\"\r\n          width=\"fit-content\"\r\n        >\r\n          {item.icon}\r\n          <Typography\r\n            variant=\"body2\"\r\n            fontWeight={700}\r\n            pl={0.5}\r\n            sx={{ color: item.color }}\r\n          >\r\n            {item.text}\r\n          </Typography>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Info;\r\n","import { Grid, Typography } from \"@mui/material\";\r\nimport DietIcons from \"./DietIcons\";\r\nimport Info from \"./Info\";\r\n\r\nconst Intro = ({\r\n  title,\r\n  readyInMinutes,\r\n  healthScore,\r\n  glutenFree,\r\n  dairyFree,\r\n  vegetarian,\r\n  vegan,\r\n}) => (\r\n  <Grid container item pt={2.5}>\r\n    <Info readyInMinutes={readyInMinutes} healthScore={healthScore} />\r\n    <Typography\r\n      variant=\"h3\"\r\n      component=\"h2\"\r\n      id=\"recipe-details-title\"\r\n      pt={5}\r\n      pb={1}\r\n      fontWeight={700}\r\n    >\r\n      {title}\r\n    </Typography>\r\n    <DietIcons\r\n      glutenFree={glutenFree}\r\n      dairyFree={dairyFree}\r\n      vegetarian={vegetarian}\r\n      vegan={vegan}\r\n    />\r\n  </Grid>\r\n);\r\n\r\nexport default Intro;\r\n","import { List, ListItem, ListItemText, Typography } from \"@mui/material\";\r\n\r\nconst IngredientList = ({ extendedIngredients, unit, servings, serving }) => {\r\n  // servings is the base value received from the api, it is then divided\r\n  // by the amount in order to get the value for 1 serving, then multiplied\r\n  // by the value changed by the user\r\n  const ingredientList = extendedIngredients.map((item) => {\r\n    const metric = {\r\n      text: item.measures.metric.unitShort,\r\n      amount: ((item.measures.metric.amount / servings) * serving).toFixed(2),\r\n    };\r\n    const us = {\r\n      text: item.measures.us.unitShort,\r\n      amount: ((item.measures.us.amount / servings) * serving).toFixed(2),\r\n    };\r\n\r\n    return (\r\n      <ListItem key={item.id} disablePadding>\r\n        <ListItemText\r\n          primary={\r\n            <>\r\n              <Typography fontWeight={700} display=\"inline\">\r\n                {unit === \"metric\"\r\n                  ? metric.amount + \" \" + metric.text\r\n                  : us.amount + \" \" + us.text}\r\n              </Typography>\r\n              <Typography display=\"inline\">{\" \"}{item.name}</Typography>\r\n            </>\r\n          }\r\n        />\r\n      </ListItem>\r\n    );\r\n  });\r\n\r\n  return <List dense>{ingredientList}</List>;\r\n};\r\n\r\nexport default IngredientList;\r\n","import { AddRounded, RemoveRounded } from \"@mui/icons-material\";\r\nimport { IconButton, InputAdornment, TextField } from \"@mui/material\";\r\nimport { styled } from \"@mui/system\";\r\n\r\nconst Servings = ({ serving, handleServing, addServing, removeServing }) => {\r\n  // Customized input field\r\n  const ServingsInput = styled(TextField)(({ theme }) => {\r\n    const themeColor = theme.palette.primary.main;\r\n    return {\r\n      \"& .MuiOutlinedInput-root\": {\r\n        width: \"100px\",\r\n        \"& input\": {\r\n          padding: \"5px 0\",\r\n          textAlign: \"center\",\r\n        },\r\n        \"& fieldset\": {\r\n          borderWidth: \"2px\",\r\n          borderRadius: \"30px\",\r\n          borderColor: themeColor,\r\n        },\r\n        \"&:hover fieldset\": {\r\n          borderColor: themeColor,\r\n        },\r\n      },\r\n      \"& .MuiInputLabel-root\": {\r\n        color: themeColor,\r\n      },\r\n    };\r\n  });\r\n\r\n  const addBt = (\r\n    <InputAdornment position=\"end\">\r\n      <IconButton\r\n        id=\"add\"\r\n        aria-label=\"add serving\"\r\n        edge=\"end\"\r\n        sx={{ p: 0 }}\r\n        onClick={addServing}\r\n      >\r\n        <AddRounded color=\"primary\" />\r\n      </IconButton>\r\n    </InputAdornment>\r\n  );\r\n\r\n  const removeBt = (\r\n    <InputAdornment position=\"start\">\r\n      <IconButton\r\n        id=\"remove\"\r\n        aria-label=\"remove serving\"\r\n        edge=\"start\"\r\n        sx={{ p: 0 }}\r\n        onClick={removeServing}\r\n      >\r\n        <RemoveRounded color=\"primary\" />\r\n      </IconButton>\r\n    </InputAdornment>\r\n  );\r\n\r\n  return (\r\n    <ServingsInput\r\n      id=\"servings-input\"\r\n      label=\"Servings\"\r\n      color=\"primary\"\r\n      value={serving}\r\n      onChange={handleServing}\r\n      autoFocus\r\n      InputLabelProps={{\r\n        shrink: true,\r\n      }}\r\n      InputProps={{ startAdornment: removeBt, endAdornment: addBt }}\r\n      inputProps={{ inputMode: \"numeric\" }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Servings;\r\n","import { ToggleButton, ToggleButtonGroup } from \"@mui/material\";\r\nimport { styled } from \"@mui/system\";\r\n\r\nconst UnitOptions = ({ handleUnitChange, unit }) => {\r\n  const measureOptions = [\r\n    { name: \"us\", aria: \"us units\" },\r\n    { name: \"metric\", aria: \"metric units\" },\r\n  ];\r\n\r\n  // Customized toggle button group for measure options\r\n  const MeasureToggleBtGroup = styled(ToggleButtonGroup)(({ theme }) => ({\r\n    \"& .MuiToggleButtonGroup-grouped\": {\r\n      border: \"2px solid\",\r\n      borderColor: theme.palette.primary.main,\r\n      borderRadius: \"30px\",\r\n      padding: \"4px 10px\",\r\n    },\r\n  }));\r\n\r\n  return (\r\n    <MeasureToggleBtGroup\r\n      value={unit}\r\n      exclusive\r\n      onChange={handleUnitChange}\r\n      aria-label=\"unit options\"\r\n      color=\"primary\"\r\n      size=\"small\"\r\n    >\r\n      {measureOptions.map((item) => (\r\n        <ToggleButton\r\n          key={item.name}\r\n          value={item.name}\r\n          aria-label={item.aria}\r\n          sx={{ color: \"text.primary\" }}\r\n        >\r\n          {item.name}\r\n        </ToggleButton>\r\n      ))}\r\n    </MeasureToggleBtGroup>\r\n  );\r\n};\r\n\r\nexport default UnitOptions;\r\n","import { Grid, Typography } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport IngredientList from \"./IngredientList\";\r\nimport Servings from \"./Servings\";\r\nimport UnitOptions from \"./UnitOptions\";\r\n\r\nconst Ingredients = ({ extendedIngredients, servings }) => {\r\n  // State management and functions that control the increase or decrease\r\n  // of the number of servings\r\n  const [serving, setServing] = useState(servings);\r\n\r\n  // Function for value input\r\n  const handleServing = (e) => {\r\n    const value = e.target.value;\r\n    const reg = /^[0-9\\b]+$/;\r\n\r\n    if (value === \"\" || reg.test(value)) {\r\n      setServing(value);\r\n    }\r\n  };\r\n\r\n  // Functions for increase/decrease buttons\r\n  const addServing = () => setServing(serving + 1);\r\n\r\n  const removeServing = () => {\r\n    if (serving > 1) {\r\n      setServing(serving - 1);\r\n    }\r\n  };\r\n\r\n  // State management and function that handles the unit measure options\r\n  const [unit, setUnit] = useState(\"us\");\r\n\r\n  const handleUnit = (e, value) => {\r\n    if (value !== null) {\r\n      setUnit(value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container item direction=\"column\" pt={5}>\r\n      <Grid\r\n        container\r\n        item\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        pb={2}\r\n      >\r\n        <Servings\r\n          serving={serving}\r\n          handleServing={handleServing}\r\n          addServing={addServing}\r\n          removeServing={removeServing}\r\n        />\r\n        <UnitOptions handleUnitChange={handleUnit} unit={unit} />\r\n      </Grid>\r\n      <Typography variant=\"h4\" component=\"h2\" color=\"primary\" fontWeight={700}>\r\n        Ingredients\r\n      </Typography>\r\n      <IngredientList\r\n        extendedIngredients={extendedIngredients}\r\n        unit={unit}\r\n        servings={servings}\r\n        serving={serving}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Ingredients;\r\n","import { Grid, List, ListItem, ListItemText, Typography } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport Logo from \"../../../../assets/Logo.svg\";\r\n\r\nconst Instructions = ({ analyzedInstructions }) => {\r\n  const instructions = analyzedInstructions.map((item) => {\r\n    // Visual representation of each step in a group of steps\r\n    const listSteps = item.steps.map((step) => (\r\n      <ListItem key={step.number} disablePadding>\r\n        <ListItemText\r\n          primary={\r\n            <>\r\n              <Typography fontWeight={700} display=\"inline\">\r\n                {step.number}\r\n                {\". \"}\r\n              </Typography>\r\n              <Typography display=\"inline\">{step.step}</Typography>\r\n            </>\r\n          }\r\n        />\r\n      </ListItem>\r\n    ));\r\n\r\n    // Recipes can have multiple groups of steps, the main group always returns\r\n    // an empty string as the name\r\n    return item.name === \"\" ? (\r\n      <List dense key={\"main list\"}>\r\n        {listSteps}\r\n      </List>\r\n    ) : (\r\n      <Grid container item key={item.name}>\r\n        <Typography\r\n          variant=\"h6\"\r\n          component=\"h3\"\r\n          color=\"primary\"\r\n          fontWeight={700}\r\n        >\r\n          {item.name}\r\n        </Typography>\r\n        <List dense>{listSteps}</List>\r\n      </Grid>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Grid container item direction=\"column\" pt={3}>\r\n      <Typography variant=\"h4\" component=\"h2\" color=\"primary\" fontWeight={700}>\r\n        Instructions\r\n      </Typography>\r\n      {instructions}\r\n      <Grid container item direction=\"column\" alignItems=\"center\" pt={3.5}>\r\n        <Box\r\n          component=\"img\"\r\n          sx={{ height: 35, width: 52 }}\r\n          src={Logo}\r\n          alt=\"whatsinmypantry smiling taco logo\"\r\n        />\r\n        <Typography variant=\"h3\" component=\"p\" color=\"primary\" fontWeight={700}>\r\n          bon appétit!\r\n        </Typography>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Instructions;\r\n","import { CopyrightRounded } from \"@mui/icons-material\";\r\nimport { Grid, Link, Typography } from \"@mui/material\";\r\n\r\nconst Footer = ({ sourceName, sourceUrl }) => (\r\n  <Grid item pt={3.5} mb={2}>\r\n    <Typography\r\n      variant=\"body1\"\r\n      component=\"p\"\r\n      display=\"flex\"\r\n      alignItems=\"center\"\r\n      sx={{ color: \"text.secondary\" }}\r\n    >\r\n      COPYRIGHT <CopyrightRounded fontSize=\"small\" sx={{ marginX: 0.5 }} />\r\n      Recipe by\r\n      <Link href={sourceUrl} target=\"_blank\" underline=\"none\" sx={{ ml: 0.5 }}>\r\n        {sourceName}\r\n      </Link>\r\n    </Typography>\r\n  </Grid>\r\n);\r\n\r\nexport default Footer;\r\n","import { Dialog, Grid, Slide } from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams, useMatch } from \"react-router\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getRecipeDetails } from \"../../../../services\";\r\nimport Header from \"./Header\";\r\nimport Intro from \"./Intro\";\r\nimport Ingredients from \"./Ingredients\";\r\nimport Instructions from \"./Instructions\";\r\nimport Footer from \"./Footer\";\r\nimport Loading from \"../../../../components/Loading\";\r\nimport ErrorPage from \"../../../../components/ErrorPage\";\r\n\r\nconst RecipeDetails = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const { desktop } = useSelector((state) => state.mediaqueries);\r\n\r\n  // Manages the state of the recipe details page (open/close)\r\n  const [open, setOpen] = useState(true);\r\n\r\n  // When the user closes the details page a timeout is set to allow the\r\n  // animation to complete\r\n  const handleTransition = () => {\r\n    setOpen(false);\r\n    setTimeout(handleClose, 800);\r\n  };\r\n\r\n  // Closing the Recipe Details page will return to previous page\r\n  // wether that page was starred or recipes, even if the user\r\n  // came from outside the app\r\n  const matchRecipes = useMatch(\"/recipes/*\");\r\n\r\n  const handleClose = () => {\r\n    if (matchRecipes) {\r\n      return navigate(\"/recipes\");\r\n    }\r\n    navigate(\"/starred\");\r\n  };\r\n\r\n  // Destructure of the id parameter used to get detailed recipe data from api\r\n  const { id } = useParams();\r\n\r\n  // If an id return no data then noResults is set to true and a message is displayed\r\n  const [noResults, setNoResults] = useState(false);\r\n\r\n  // State management of the recipe details data\r\n  const [recipeDetails, setRecipeDetails] = useState([]);\r\n\r\n  // Destructuring of the recipe details data received from the api\r\n  const {\r\n    image,\r\n    title,\r\n    readyInMinutes,\r\n    healthScore,\r\n    glutenFree,\r\n    dairyFree,\r\n    vegan,\r\n    vegetarian,\r\n    extendedIngredients,\r\n    servings,\r\n    analyzedInstructions,\r\n    sourceName,\r\n    sourceUrl,\r\n  } = recipeDetails;\r\n\r\n  useEffect(() => {\r\n    getRecipeDetails(id, (searchResults) => {\r\n      if (searchResults === 402) {\r\n        return dispatch({ type: \"API_LIMIT\", payload: true });\r\n      }\r\n      dispatch({ type: \"API_LIMIT\", payload: false });\r\n\r\n      if (searchResults === undefined) {\r\n        return setNoResults(true);\r\n      }\r\n      setNoResults(false);\r\n\r\n      setRecipeDetails(searchResults);\r\n    });\r\n  }, [dispatch, id]);\r\n\r\n  // When the detaisl component is opened and while the data is unavailable\r\n  // a loading animation is presented\r\n  const details =\r\n    recipeDetails.length === 0 ? (\r\n      <Loading />\r\n    ) : (\r\n      <Grid container>\r\n        <Grid container item>\r\n          <Header handleTransition={handleTransition} image={image} />\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          item\r\n          direction=\"column\"\r\n          alignItems=\"stretch\"\r\n          pl={2.5}\r\n          pr={2.5}\r\n        >\r\n          <Intro\r\n            title={title}\r\n            readyInMinutes={readyInMinutes}\r\n            healthScore={healthScore}\r\n            glutenFree={glutenFree}\r\n            dairyFree={dairyFree}\r\n            vegetarian={vegetarian}\r\n            vegan={vegan}\r\n          />\r\n          <Ingredients\r\n            extendedIngredients={extendedIngredients}\r\n            servings={servings}\r\n          />\r\n          <Instructions analyzedInstructions={analyzedInstructions} />\r\n          <Footer sourceName={sourceName} sourceUrl={sourceUrl} />\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n\r\n  return (\r\n    <Dialog\r\n      aria-labelledby=\"recipe-details-title\"\r\n      open={open}\r\n      onClose={handleTransition}\r\n      TransitionComponent={Slide}\r\n      TransitionProps={{ direction: \"up\", timeout: 1000 }}\r\n      fullScreen={!desktop}\r\n      hideBackdrop={!desktop}\r\n    >\r\n      {noResults ? <ErrorPage /> : details}\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default RecipeDetails;\r\n","import { Route, Routes } from \"react-router\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\r\nimport App from \"./App\";\r\nimport Home from \"./pages/home\";\r\nimport Recipes from \"./pages/recipes\";\r\nimport Starred from \"./pages/starred\";\r\nimport About from \"./pages/about\";\r\nimport RecipeDetails from \"./pages/recipes/components/RecipeDetails\";\r\nimport ErrorPage from \"./components/ErrorPage\";\r\n\r\nconst MainRoutes = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  // Media query management of the app\r\n  const desktop = useMediaQuery(\"(min-width:700px)\");\r\n  const desktopLg = useMediaQuery(\"(min-width:1200px)\");\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: \"MEDIAQUERY\",\r\n      payload: { desktop: desktop, desktopLg: desktopLg },\r\n    });\r\n  }, [desktop, desktopLg, dispatch]);\r\n\r\n  const recipeDetails = <Route path=\":id\" element={<RecipeDetails />} />;\r\n\r\n  return (\r\n    <Routes>\r\n      <Route path=\"/\" element={<App />}>\r\n        {!desktop && <Route index element={<Home />} />}\r\n        <Route path=\"recipes\" element={<Recipes />}>\r\n          {recipeDetails}\r\n        </Route>\r\n        <Route path=\"starred\" element={<Starred />}>\r\n          {recipeDetails}\r\n        </Route>\r\n        {desktop && <Route path=\"about\" element={<About />} />}\r\n      </Route>\r\n      <Route path=\"*\" element={<ErrorPage />} />\r\n    </Routes>\r\n  );\r\n};\r\n\r\nexport default MainRoutes;\r\n","import { createStore } from \"redux\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport reducer from \"./reducer\";\r\n\r\nconst persistConfig = {\r\n  key: \"whatsinmypantry\",\r\n  storage,\r\n  blacklist: [\"apiLimitReached\", \"mediaqueries\"],\r\n};\r\n\r\n// myPantry - stores a list of ingredients added by the user\r\n// starredRecipes - stores a list of recipes saved by the users\r\n// apiLimitReached - indicates via the ErrorPage component that the number\r\n// of api calls has reached its limit (this is not saved on local storage)\r\n// mediaqueries - stores an object {desktop: boolean, desktopLg: boolean} based\r\n// on current width of the document\r\n// preferedDarkMode - stores the system or browser theme preference\r\n// darkMode - stores theme preference only after a theme is chosen in the app itself\r\nconst initialState = {\r\n  myPantry: [],\r\n  starredRecipes: [],\r\n  apiLimitReached: false,\r\n  mediaqueries: {},\r\n  darkMode: false\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, reducer);\r\n\r\nexport const store = createStore(persistedReducer, initialState);\r\nexport const persistor = persistStore(store);\r\n","export default function reducer(state, action) {\r\n  switch (action.type) {\r\n    case \"ADD_INGREDIENT\":\r\n      return {\r\n        ...state,\r\n        myPantry: [...state.myPantry, action.payload],\r\n      };\r\n    case \"REMOVE_INGREDIENT\":\r\n      state.myPantry.splice(action.payload, 1);\r\n      return {\r\n        ...state,\r\n        myPantry: [...state.myPantry],\r\n      };\r\n    case \"ADD_STARRED\":\r\n      return {\r\n        ...state,\r\n        starredRecipes: [...state.starredRecipes, action.payload],\r\n      };\r\n    case \"REMOVE_STARRED\":\r\n      state.starredRecipes.splice(action.payload, 1);\r\n      return {\r\n        ...state,\r\n        starredRecipes: [...state.starredRecipes],\r\n      };\r\n    case \"API_LIMIT\":\r\n      return {\r\n        ...state,\r\n        apiLimitReached: action.payload,\r\n      };\r\n    case \"MEDIAQUERY\":\r\n      return {\r\n        ...state,\r\n        mediaqueries: action.payload,\r\n      };\r\n    case \"THEME_MODE\":\r\n      return {\r\n        ...state,\r\n        darkMode: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport MainRoutes from \"./Routes\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport { store, persistor } from \"./store\";\r\nimport Loading from \"./components/Loading\";\r\n\r\n// BrowserRouter basename only needed to deploy on GitHub Pages\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={<Loading />} persistor={persistor}>\r\n        <BrowserRouter basename=\"whatsinmypantry\">\r\n          <MainRoutes />\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}